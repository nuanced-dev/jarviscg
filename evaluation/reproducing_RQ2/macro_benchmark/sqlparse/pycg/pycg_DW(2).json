{"sqlparse.filters.reindent": ["sqlparse.utils", "sqlparse.filters.reindent.ReindentFilter", "sqlparse.tokens", "sqlparse.sql"], "sqlparse.filters.right_margin": ["sqlparse.tokens", "re", "sqlparse.sql", "sqlparse.filters.right_margin.RightMarginFilter"], "sqlparse.filters.__init__": [], "sqlparse.filters.tokens": ["sqlparse.filters.tokens.TruncateStringFilter", "sqlparse.filters.tokens.KeywordCaseFilter", "sqlparse.tokens", "sqlparse.filters.tokens.IdentifierCaseFilter", "sqlparse.filters.tokens._CaseFilter"], "sqlparse.filters.aligned_indent": ["sqlparse.utils", "sqlparse.tokens", "sqlparse.sql", "sqlparse.filters.aligned_indent.AlignedIndentFilter"], "sqlparse.filters.others": ["sqlparse.sql", "sqlparse.filters.others.SpacesAroundOperatorsFilter", "re", "sqlparse.filters.others.StripCommentsFilter", "sqlparse.tokens", "sqlparse.filters.others.SerializerUnicode", "sqlparse.filters.others.StripWhitespaceFilter", "sqlparse.utils"], "sqlparse.filters.output": ["sqlparse.filters.output.OutputPythonFilter", "sqlparse.sql", "sqlparse.filters.output.OutputFilter", "sqlparse.tokens", "sqlparse.filters.output.OutputPHPFilter"], "sqlparse.formatter": ["sqlparse.exceptions", "sqlparse.filters"], "sqlparse.keywords": ["re.compile", "sqlparse.tokens", "re"], "sqlparse.__init__": [], "sqlparse.tokens": ["sqlparse.tokens._TokenType"], "sqlparse.cli": ["sqlparse.exceptions", "sqlparse", "io", "argparse"], "sqlparse.utils": ["re.compile", "re", "collections", "contextlib", "contextlib.contextmanager"], "sqlparse.lexer": ["sqlparse.lexer.Lexer", "sqlparse.tokens", "io", "sqlparse.keywords", "sqlparse.utils"], "sqlparse.exceptions": ["sqlparse.exceptions.SQLParseError"], "sqlparse.sql": ["sqlparse.sql.Parenthesis", "sqlparse.sql.Begin", "sqlparse.sql.Operation", "sqlparse.sql.Case", "sqlparse.sql.Identifier", "sqlparse.sql.Where", "sqlparse.sql.Having", "sqlparse.sql.Assignment", "re", "sqlparse.sql.Command", "sqlparse.sql.NameAliasMixin", "sqlparse.tokens", "sqlparse.utils", "sqlparse.sql.TypedLiteral", "sqlparse.sql.Values", "sqlparse.sql.IdentifierList", "sqlparse.sql.Statement", "sqlparse.sql.Comparison", "sqlparse.sql.If", "sqlparse.sql.TokenList", "sqlparse.sql.Function", "sqlparse.sql.Comment", "sqlparse.sql.SquareBrackets", "sqlparse.sql.Token", "sqlparse.sql.For"], "sqlparse.engine.filter_stack": ["sqlparse.lexer", "sqlparse.engine.statement_splitter", "sqlparse.engine.filter_stack.FilterStack", "sqlparse.engine.grouping"], "sqlparse.engine.grouping": ["sqlparse.sql", "sqlparse.utils.recurse.wrap", "sqlparse.utils.recurse", "sqlparse.tokens", "sqlparse.utils"], "sqlparse.engine.__init__": [], "sqlparse/.engine.statement_splitter": [], "sqlparse.__main__": ["sys.exit", "sqlparse.cli.main", "sqlparse.cli"], "sqlparse.cli.main": ["_io.TextIOWrapper", "sys.stdout.write", "argparse.ArgumentParser.parse_args", "<builtin>.open", "sqlparse.cli._error", "<builtin>.vars", "sqlparse.formatter.validate_options", "sqlparse.cli.create_parser", "sqlparse.format", "sys.stdout.flush", "sys.stdout.close"], "sqlparse.cli.create_parser": ["argparse._ActionsContainer.add_argument", "argparse.ArgumentParser.__init__", "argparse._ActionsContainer.add_argument_group"], "sqlparse.format": ["sqlparse.formatter.validate_options", "sqlparse.engine.filter_stack.FilterStack.run", "sqlparse.formatter.build_filter_stack"], "sqlparse.parse": ["sqlparse.parsestream", "<builtin>.tuple"], "sqlparse.lexer.tokenize": ["sqlparse.lexer.Lexer.get_tokens"], "sqlparse.utils.remove_quotes": [], "sqlparse.filters.reindent.ReindentFilter": [], "re": ["functools.lru_cache", "functools", "sre_compile.compile", "re.Scanner", "functools.singledispatch.wrapper", "copyreg", "sre_compile", "<builtin>.type", "functools._lru_cache_wrapper.wrapper", "enum", "re.RegexFlag", "sre_parse", "<builtin>.chr", "copyreg.pickle", "<builtin>.globals", "functools.lru_cache.decorating_function", "functools.update_wrapper.wrapper"], "sqlparse.filters.right_margin.RightMarginFilter": [], "sqlparse.filters.tokens.TruncateStringFilter": [], "sqlparse.filters.tokens.KeywordCaseFilter": [], "sqlparse.filters.tokens.IdentifierCaseFilter": [], "sqlparse.filters.tokens._CaseFilter": [], "sqlparse.filters.aligned_indent.AlignedIndentFilter": [], "sqlparse.filters.others.SpacesAroundOperatorsFilter": [], "sqlparse.filters.others.StripCommentsFilter": [], "sqlparse.filters.others.SerializerUnicode": [], "sqlparse.filters.others.StripWhitespaceFilter": [], "sqlparse.filters.output.OutputPythonFilter": [], "sqlparse.filters.output.OutputFilter": [], "sqlparse.filters.output.OutputPHPFilter": [], "sqlparse.filters": ["sqlparse.filters.others", "sqlparse.filters.right_margin", "sqlparse.filters.reindent", "sqlparse.filters.tokens", "sqlparse.filters.output", "sqlparse.filters.aligned_indent"], "re.compile": ["re._compile"], "sqlparse.tokens._TokenType": [], "sqlparse": ["sqlparse.cli", "sqlparse.sql", "sqlparse.formatter", "sqlparse.engine", "sqlparse.tokens", "sqlparse.filters"], "io": ["io.BufferedIOBase", "_io._IOBase.register", "_io._RawIOBase.register", "io.IOBase", "io.TextIOBase", "abc", "io.RawIOBase"], "argparse": ["argparse.Action", "argparse._StoreConstAction", "argparse._ArgumentGroup", "argparse.ArgumentTypeError", "argparse._VersionAction", "argparse.FileType", "argparse._StoreFalseAction", "argparse._SubParsersAction", "argparse._StoreAction", "shutil", "argparse._ExtendAction", "argparse._ActionsContainer", "argparse.RawTextHelpFormatter", "argparse._StoreTrueAction", "argparse._AttributeHolder", "argparse._HelpAction", "argparse._AppendConstAction", "re", "argparse.ArgumentError", "argparse.Namespace", "argparse.RawDescriptionHelpFormatter", "argparse.ArgumentParser", "gettext", "argparse._CountAction", "argparse._MutuallyExclusiveGroup", "argparse.HelpFormatter", "argparse.ArgumentDefaultsHelpFormatter", "argparse.MetavarTypeHelpFormatter", "argparse._AppendAction", "os"], "collections": ["heapq", "collections.Counter", "collections.UserList", "collections._OrderedDictItemsView", "_collections_abc.MutableSequence.register", "collections._OrderedDictKeysView", "collections.OrderedDict", "operator", "collections.ChainMap", "collections.UserDict", "collections._Link", "reprlib", "keyword", "collections._OrderedDictValuesView", "collections.UserString"], "contextlib": ["contextlib.redirect_stderr", "contextlib.nullcontext", "abc", "contextlib._GeneratorContextManagerBase", "contextlib.redirect_stdout", "contextlib._AsyncGeneratorContextManager", "contextlib.closing", "contextlib.AbstractContextManager", "collections", "contextlib.suppress", "contextlib.AbstractAsyncContextManager", "contextlib._RedirectStream", "contextlib.ContextDecorator", "contextlib.AsyncExitStack", "contextlib.ExitStack", "contextlib._BaseExitStack", "contextlib._GeneratorContextManager", "functools", "collections.abc", "types"], "contextlib.contextmanager": ["functools.wraps", "_functools.partial"], "sqlparse.lexer.Lexer": [], "sqlparse.exceptions.SQLParseError": [], "sqlparse.sql.Parenthesis": [], "sqlparse.sql.Begin": [], "sqlparse.sql.Operation": [], "sqlparse.sql.Case": [], "sqlparse.sql.Identifier": [], "sqlparse.sql.Where": [], "sqlparse.sql.Having": [], "sqlparse.sql.Assignment": [], "sqlparse.sql.Command": [], "sqlparse.sql.NameAliasMixin": [], "sqlparse.sql.TypedLiteral": [], "sqlparse.sql.Values": [], "sqlparse.sql.IdentifierList": [], "sqlparse.sql.Statement": [], "sqlparse.sql.Comparison": [], "sqlparse.sql.If": [], "sqlparse.sql.TokenList": [], "sqlparse.sql.Function": [], "sqlparse.sql.Comment": [], "sqlparse.sql.SquareBrackets": [], "sqlparse.sql.Token": [], "sqlparse.sql.For": [], "sqlparse.engine.statement_splitter": ["sqlparse.engine.statement_splitter.StatementSplitter", "sqlparse.tokens", "sqlparse.sql"], "sqlparse.engine.filter_stack.FilterStack": [], "sqlparse.utils.recurse.wrap": [], "sqlparse.utils.recurse": [], "sys.exit": [], "_io.TextIOWrapper": [], "sys.stdout.write": [], "argparse.ArgumentParser.parse_args": ["argparse.ArgumentParser.parse_known_args", "gettext.gettext", "argparse.ArgumentParser.error"], "<builtin>.open": [], "sqlparse.cli._error": ["sys.stderr.write"], "<builtin>.vars": [], "sqlparse.formatter.validate_options": ["<builtin>.int"], "sys.stdout.flush": [], "sys.stdout.close": [], "argparse._ActionsContainer.add_argument": ["argparse._ActionsContainer._get_positional_kwargs", "<builtin>.callable", "argparse._ActionsContainer._add_action", "argparse.ArgumentParser._add_action", "argparse._MutuallyExclusiveGroup._add_action", "argparse.HelpFormatter._format_args", "<builtin>.hasattr", "argparse._ActionsContainer._get_optional_kwargs", "argparse._ArgumentGroup._add_action", "<builtin>.ValueError", "argparse._ActionsContainer._registry_get", "argparse._ActionsContainer._pop_action_class", "argparse.ArgumentParser._get_formatter", "<builtin>.len"], "argparse.ArgumentParser.__init__": ["argparse._ActionsContainer._add_container_actions", "posixpath.basename", "argparse._ActionsContainer.register", "gettext.gettext", "argparse._ActionsContainer.add_argument_group", "argparse._ActionsContainer.add_argument", "ntpath.basename", "<builtin>.super"], "argparse._ActionsContainer.add_argument_group": ["argparse._ArgumentGroup.__init__"], "sqlparse.engine.filter_stack.FilterStack.run": ["sqlparse.engine.grouping.group", "sqlparse.engine.statement_splitter.StatementSplitter.process", "sqlparse.engine.statement_splitter.StatementSplitter.__init__", "sqlparse.lexer.tokenize"], "sqlparse.formatter.build_filter_stack": ["sqlparse.engine.filter_stack.FilterStack.enable_grouping"], "sqlparse.parsestream": ["sqlparse.engine.filter_stack.FilterStack.enable_grouping", "sqlparse.engine.filter_stack.FilterStack.run"], "<builtin>.tuple": [], "sqlparse.lexer.Lexer.get_tokens": ["<builtin>.callable", "<builtin>.TypeError", "<builtin>.enumerate", "<builtin>.isinstance", "<builtin>.type", "sqlparse.utils.consume"], "functools.lru_cache": ["<builtin>.callable", "<builtin>.isinstance", "<builtin>.TypeError", "_functools._lru_cache_wrapper"], "functools": ["collections.namedtuple", "<builtin>.object", "functools.singledispatchmethod", "collections", "abc", "reprlib", "functools.cached_property", "functools.partialmethod", "functools._HashedSeq", "functools.partial"], "sre_compile.compile": ["sre_compile.dis", "<builtin>.tuple", "_sre.compile", "<builtin>.print", "sre_compile._code", "sre_compile.isstring", "sre_parse.parse"], "re.Scanner": [], "functools.singledispatch.wrapper": ["<builtin>.TypeError", "functools.singledispatch.dispatch"], "copyreg": ["copyreg.pickle"], "sre_compile": ["sre_parse", "<builtin>.tuple", "sre_constants"], "<builtin>.type": [], "functools._lru_cache_wrapper.wrapper": ["functools._make_key"], "enum": ["enum._EnumDict", "<builtin>.object", "enum.IntFlag", "enum.auto", "enum.Flag", "enum.Enum", "enum.IntEnum", "enum.EnumMeta", "types"], "re.RegexFlag": [], "sre_parse": ["sre_parse.State", "sre_parse.Tokenizer", "<builtin>.frozenset", "sre_parse.SubPattern", "<builtin>.ord", "sre_parse.Verbose", "sre_constants"], "<builtin>.chr": [], "copyreg.pickle": ["<builtin>.callable", "<builtin>.TypeError", "copyreg.constructor"], "<builtin>.globals": [], "functools.lru_cache.decorating_function": ["_functools._lru_cache_wrapper"], "functools.update_wrapper.wrapper": [], "re._compile": ["<builtin>.next", "<builtin>.TypeError", "sre_compile.compile", "<builtin>.isinstance", "<builtin>.type", "sre_compile.isstring", "<builtin>.ValueError", "<builtin>.iter", "<builtin>.len"], "sqlparse.engine": ["sqlparse.engine.statement_splitter", "sqlparse.engine.filter_stack", "sqlparse.engine.grouping"], "io.BufferedIOBase": [], "_io._IOBase.register": [], "_io._RawIOBase.register": [], "io.IOBase": [], "io.TextIOBase": [], "abc": ["abc.abstractstaticmethod", "_py_abc", "abc.abstractproperty", "abc.ABC", "abc.abstractclassmethod", "abc.ABCMeta"], "io.RawIOBase": [], "argparse.Action": [], "argparse._StoreConstAction": [], "argparse._ArgumentGroup": [], "argparse.ArgumentTypeError": [], "argparse._VersionAction": [], "argparse.FileType": [], "argparse._StoreFalseAction": [], "argparse._SubParsersAction": ["argparse._SubParsersAction._ChoicesPseudoAction"], "argparse._StoreAction": [], "shutil": ["collections.namedtuple", "shutil.SpecialFileError", "shutil.RegistryError", "fnmatch", "shutil.ReadError", "sys.platform.startswith", "<builtin>.hasattr", "stat", "shutil.SameFileError", "collections", "shutil._GiveupOnFastCopy", "grp", "shutil.Error", "lzma", "bz2", "zlib", "os", "shutil.ExecError"], "argparse._ExtendAction": [], "argparse._ActionsContainer": [], "argparse.RawTextHelpFormatter": [], "argparse._StoreTrueAction": [], "argparse._AttributeHolder": [], "argparse._HelpAction": [], "argparse._AppendConstAction": [], "argparse.ArgumentError": [], "argparse.Namespace": [], "argparse.RawDescriptionHelpFormatter": [], "argparse.ArgumentParser": [], "gettext": ["locale", "<builtin>.enumerate", "ntpath.join", "re", "re.compile", "gettext.NullTranslations", "gettext.GNUTranslations", "posixpath.join", "os"], "argparse._CountAction": [], "argparse._MutuallyExclusiveGroup": [], "argparse.HelpFormatter": ["argparse.HelpFormatter._Section"], "argparse.ArgumentDefaultsHelpFormatter": [], "argparse.MetavarTypeHelpFormatter": [], "argparse._AppendAction": [], "os": ["posixpath", "<builtin>.set", "os.PathLike", "collections.abc", "<builtin>.ImportError", "os._Environ.__init__", "os._AddedDllDirectory", "os._get_exports_list", "os._Environ", "os._createenviron", "stat", "os._exists", "abc", "os._add", "<builtin>.globals", "os._wrap_close", "os._fscodec", "ntpath"], "heapq": ["_heapq", "doctest", "doctest.testmod", "<builtin>.print"], "collections.Counter": [], "collections.UserList": [], "collections._OrderedDictItemsView": [], "_collections_abc.MutableSequence.register": [], "collections._OrderedDictKeysView": [], "collections.OrderedDict": ["<builtin>.object", "reprlib.recursive_repr", "reprlib.recursive_repr.decorating_function"], "operator": ["operator.attrgetter", "operator.itemgetter", "operator.methodcaller"], "collections.ChainMap": ["reprlib.recursive_repr", "reprlib.recursive_repr.decorating_function"], "collections.UserDict": [], "collections._Link": [], "reprlib": ["reprlib.Repr", "reprlib.Repr.__init__"], "keyword": ["<builtin>.frozenset"], "collections._OrderedDictValuesView": [], "collections.UserString": [], "contextlib.redirect_stderr": [], "contextlib.nullcontext": [], "contextlib._GeneratorContextManagerBase": [], "contextlib.redirect_stdout": [], "contextlib._AsyncGeneratorContextManager": [], "contextlib.closing": [], "contextlib.AbstractContextManager": ["abc.abstractmethod"], "contextlib.suppress": [], "contextlib.AbstractAsyncContextManager": ["abc.abstractmethod"], "contextlib._RedirectStream": [], "contextlib.ContextDecorator": [], "contextlib.AsyncExitStack": [], "contextlib.ExitStack": [], "contextlib._BaseExitStack": [], "contextlib._GeneratorContextManager": [], "collections.abc": ["collections.abc"], "types": ["types.DynamicClassAttribute", "<builtin>.object", "types._g", "<builtin>.globals", "<builtin>.type", "types._GeneratorWrapper", "sys.exc_info", "types._C", "types._cell_factory"], "functools.wraps": ["_functools.partial"], "_functools.partial": [], "sqlparse.engine.statement_splitter.StatementSplitter": [], "argparse.ArgumentParser.parse_known_args": ["<builtin>.setattr", "argparse.Namespace.__init__", "<builtin>.hasattr", "<builtin>.str", "<builtin>.list", "argparse.ArgumentParser.error", "<builtin>.delattr", "sys.exc_info", "argparse.ArgumentParser._parse_known_args", "<builtin>.getattr"], "gettext.gettext": ["gettext.dgettext"], "argparse.ArgumentParser.error": ["argparse.ArgumentParser.exit", "argparse.ArgumentParser.print_usage", "gettext.gettext"], "sys.stderr.write": [], "<builtin>.int": [], "argparse._ActionsContainer._get_positional_kwargs": ["<builtin>.TypeError", "<builtin>.dict", "gettext.gettext"], "<builtin>.callable": [], "argparse._ActionsContainer._add_action": ["argparse._ActionsContainer._check_conflict"], "argparse.ArgumentParser._add_action": [], "argparse._MutuallyExclusiveGroup._add_action": ["argparse._ActionsContainer._add_action", "argparse.ArgumentParser._add_action", "argparse._MutuallyExclusiveGroup._add_action", "gettext.gettext", "argparse._ArgumentGroup._add_action", "<builtin>.ValueError"], "argparse.HelpFormatter._format_args": ["argparse.HelpFormatter._metavar_formatter", "<builtin>.range", "<builtin>.ValueError", "argparse.HelpFormatter._metavar_formatter.format"], "<builtin>.hasattr": [], "argparse._ActionsContainer._get_optional_kwargs": ["<builtin>.dict", "<builtin>.ValueError", "gettext.gettext", "<builtin>.len"], "argparse._ArgumentGroup._add_action": ["<builtin>.super"], "<builtin>.ValueError": [], "argparse._ActionsContainer._registry_get": [], "argparse._ActionsContainer._pop_action_class": ["argparse._ActionsContainer._registry_get"], "argparse.ArgumentParser._get_formatter": ["argparse.HelpFormatter.__init__"], "<builtin>.len": [], "argparse._ActionsContainer._add_container_actions": ["argparse._ActionsContainer.add_mutually_exclusive_group", "argparse._ActionsContainer.add_argument_group", "<builtin>.ValueError", "gettext.gettext"], "posixpath.basename": ["sys.base_prefix.rfind", "sys.path.rfind", "_io._BufferedIOBase.rfind", "posixpath._get_sep"], "argparse._ActionsContainer.register": [], "ntpath.basename": ["ntpath.split"], "<builtin>.super": [], "argparse._ArgumentGroup.__init__": ["<builtin>.super"], "sqlparse.engine.grouping.group": [], "sqlparse.engine.statement_splitter.StatementSplitter.process": ["<builtin>.all", "sqlparse.engine.statement_splitter.StatementSplitter._reset", "sqlparse.engine.statement_splitter.StatementSplitter._change_splitlevel", "sqlparse.sql.Token.__init__", "sqlparse.sql.TokenList.__init__"], "sqlparse.engine.statement_splitter.StatementSplitter.__init__": ["sqlparse.engine.statement_splitter.StatementSplitter._reset"], "sqlparse.engine.filter_stack.FilterStack.enable_grouping": [], "<builtin>.TypeError": [], "<builtin>.enumerate": [], "<builtin>.isinstance": [], "sqlparse.utils.consume": ["itertools.islice", "_collections.deque"], "_functools._lru_cache_wrapper": [], "collections.namedtuple": ["<builtin>.tuple", "<builtin>.dict", "<builtin>.TypeError", "<builtin>.enumerate", "<builtin>.map", "<builtin>.ValueError", "sys.intern", "<builtin>.set", "collections.<lambda1>", "<builtin>.repr", "_collections._tuplegetter", "<builtin>.isinstance", "<builtin>.type", "<builtin>.list", "<builtin>.zip", "<builtin>.exec", "<builtin>.len", "sys._getframe", "<builtin>.str", "<builtin>.reversed"], "<builtin>.object": [], "functools.singledispatchmethod": [], "functools.cached_property": [], "functools.partialmethod": [], "functools._HashedSeq": [], "functools.partial": ["reprlib.recursive_repr", "reprlib.recursive_repr.decorating_function"], "sre_compile.dis": ["sre_compile.dis.dis_", "<builtin>.set", "<builtin>.str", "<builtin>.len"], "_sre.compile": [], "<builtin>.print": [], "sre_compile._code": ["sre_compile._compile_info", "sre_compile._compile"], "sre_compile.isstring": ["<builtin>.isinstance"], "sre_parse.parse": ["sre_parse.Tokenizer.error", "sre_parse.SubPattern.dump", "sre_parse._parse_sub", "sre_parse.Tokenizer.seek", "sre_parse.State.__init__", "sre_parse.fix_flags", "sre_parse.Tokenizer.__init__"], "functools.singledispatch.dispatch": ["_py_abc.get_cache_token", "_abc.get_cache_token", "collections.ChainMap.clear", "_collections_abc.MutableMapping.clear", "functools._find_impl"], "sre_constants": ["<builtin>.open", "sre_constants._NamedIntConstant", "sre_constants.dump", "<builtin>.print", "sre_constants.error", "sre_constants._makecodes"], "functools._make_key": ["functools._HashedSeq.__init__"], "enum._EnumDict": [], "enum.IntFlag": [], "enum.auto": [], "enum.Flag": [], "enum.Enum": ["types.DynamicClassAttribute"], "enum.IntEnum": [], "enum.EnumMeta": [], "sre_parse.State": [], "sre_parse.Tokenizer": [], "<builtin>.frozenset": [], "sre_parse.SubPattern": [], "<builtin>.ord": [], "sre_parse.Verbose": [], "copyreg.constructor": ["<builtin>.callable", "<builtin>.TypeError"], "<builtin>.next": [], "<builtin>.iter": [], "abc.abstractstaticmethod": [], "_py_abc": ["_weakrefset", "_py_abc.ABCMeta"], "abc.abstractproperty": [], "abc.ABC": [], "abc.abstractclassmethod": [], "abc.ABCMeta": [], "argparse._SubParsersAction._ChoicesPseudoAction": [], "shutil.SpecialFileError": [], "shutil.RegistryError": [], "fnmatch": ["posixpath", "functools.lru_cache", "functools", "functools.singledispatch.wrapper", "re", "functools._lru_cache_wrapper.wrapper", "functools.lru_cache.decorating_function", "os", "functools.update_wrapper.wrapper"], "shutil.ReadError": [], "sys.platform.startswith": [], "stat": [], "shutil.SameFileError": [], "shutil._GiveupOnFastCopy": [], "grp": [], "shutil.Error": [], "lzma": ["_lzma", "lzma.LZMAFile", "_compression", "io", "os"], "bz2": ["threading", "<builtin>.object", "bz2.BZ2File", "warnings", "_bz2", "_compression", "io", "os"], "zlib": [], "shutil.ExecError": [], "locale": ["functools", "functools.wraps", "encodings", "collections.abc", "locale._print_locale", "locale._test", "re.compile", "re", "_functools.partial", "sys.platform.startswith", "<builtin>.hasattr", "<builtin>.print", "encodings.aliases", "<builtin>.sorted", "<builtin>.globals"], "ntpath.join": ["genericpath._check_arg_types", "<builtin>.map", "<builtin>.isinstance", "ntpath.splitdrive"], "gettext.NullTranslations": [], "gettext.GNUTranslations": [], "posixpath.join": ["sys.base_prefix.endswith", "posixpath._get_sep", "<builtin>.map", "genericpath._check_arg_types", "sys.path.endswith"], "argparse.HelpFormatter._Section": [], "posixpath": ["os", "genericpath", "stat"], "<builtin>.set": [], "os.PathLike": ["abc.abstractmethod"], "<builtin>.ImportError": [], "os._Environ.__init__": [], "os._AddedDllDirectory": [], "os._get_exports_list": ["<builtin>.list", "<builtin>.dir"], "os._Environ": [], "os._createenviron": ["os._Environ.__init__", "os._createenviron.check_str", "sys.getfilesystemencoding"], "os._exists": ["<builtin>.globals"], "os._add": [], "os._wrap_close": [], "os._fscodec": ["sys.getfilesystemencodeerrors", "sys.getfilesystemencoding"], "ntpath": ["sys.getwindowsversion", "<builtin>.hasattr", "genericpath", "stat", "os"], "_heapq": [], "doctest": ["doctest.DocTestFinder", "doctest._test", "sys.exit", "__future__", "doctest.register_optionflag", "doctest.DocTestParser", "collections.namedtuple", "doctest.DocTestFailure", "doctest.DocFileCase", "doctest._TestClass", "doctest._DocTestSuite", "collections", "linecache", "doctest._SpoofOut", "difflib", "re", "doctest.Example", "doctest.SkipDocTestCase", "doctest.DocTestCase", "doctest.OutputChecker", "unittest", "traceback", "os", "doctest.DocTestRunner", "inspect", "doctest._OutputRedirectingPdb", "io", "doctest.DebugRunner", "doctest.DocTest", "doctest.UnexpectedException"], "doctest.testmod": ["doctest.DocTestFinder.find", "doctest.DocTestRunner.summarize", "<builtin>.TypeError", "doctest.DebugRunner.run", "inspect.ismodule", "doctest.DocTestRunner.run", "sys.modules.get", "doctest.DocTestRunner.__init__", "doctest.DocTestFinder.__init__", "doctest.DocTestRunner.merge"], "reprlib.recursive_repr": [], "reprlib.recursive_repr.decorating_function": ["<builtin>.set", "<builtin>.getattr"], "operator.attrgetter": [], "operator.itemgetter": [], "operator.methodcaller": [], "reprlib.Repr": [], "reprlib.Repr.__init__": [], "abc.abstractmethod": [], "types.DynamicClassAttribute": [], "types._g": [], "types._GeneratorWrapper": [], "sys.exc_info": [], "types._C": [], "types._cell_factory": [], "<builtin>.setattr": [], "argparse.Namespace.__init__": ["<builtin>.setattr"], "<builtin>.str": [], "<builtin>.list": [], "<builtin>.delattr": [], "argparse.ArgumentParser._parse_known_args": ["<builtin>.setattr", "<builtin>.set", "argparse.ArgumentParser._parse_known_args.consume_positionals", "argparse.ArgumentParser._get_positional_actions", "argparse.ArgumentParser._parse_known_args.consume_optional", "<builtin>.enumerate", "argparse.ArgumentParser._get_value", "<builtin>.isinstance", "gettext.gettext", "<builtin>.min", "<builtin>.hasattr", "<builtin>.max", "argparse._get_action_name", "argparse.ArgumentParser.error", "argparse.ArgumentParser._parse_optional", "<builtin>.iter", "argparse.ArgumentParser._read_args_from_files", "<builtin>.getattr"], "<builtin>.getattr": [], "gettext.dgettext": ["gettext.translation", "gettext.NullTranslations.gettext"], "argparse.ArgumentParser.exit": ["sys.exit", "argparse.ArgumentParser._print_message"], "argparse.ArgumentParser.print_usage": ["argparse.ArgumentParser.format_usage", "argparse.ArgumentParser._print_message"], "<builtin>.dict": [], "argparse._ActionsContainer._check_conflict": ["argparse._ActionsContainer._get_handler"], "argparse.HelpFormatter._metavar_formatter": ["<builtin>.str"], "<builtin>.range": [], "argparse.HelpFormatter._metavar_formatter.format": ["<builtin>.isinstance"], "argparse.HelpFormatter.__init__": ["shutil.get_terminal_size", "re.compile", "<builtin>.min", "argparse.HelpFormatter._Section.__init__", "<builtin>.max"], "argparse._ActionsContainer.add_mutually_exclusive_group": ["argparse._MutuallyExclusiveGroup.__init__"], "sys.base_prefix.rfind": [], "sys.path.rfind": [], "_io._BufferedIOBase.rfind": [], "posixpath._get_sep": ["<builtin>.isinstance"], "ntpath.split": ["<builtin>.len", "ntpath.splitdrive", "ntpath._get_bothseps"], "<builtin>.all": [], "sqlparse.engine.statement_splitter.StatementSplitter._reset": [], "sqlparse.engine.statement_splitter.StatementSplitter._change_splitlevel": ["<builtin>.max"], "sqlparse.sql.Token.__init__": ["<builtin>.str"], "sqlparse.sql.TokenList.__init__": ["<builtin>.setattr", "<builtin>.super", "<builtin>.str"], "itertools.islice": [], "_collections.deque": [], "<builtin>.map": [], "sys.intern": [], "collections.<lambda1>": ["operator.itemgetter.__init__", "<builtin>.property"], "<builtin>.repr": [], "_collections._tuplegetter": [], "<builtin>.zip": [], "<builtin>.exec": [], "sys._getframe": [], "<builtin>.reversed": [], "sre_compile.dis.dis_": ["sre_compile._hex_code", "sre_compile.dis.dis_.print_", "sre_compile.dis.dis_", "<builtin>.str", "<builtin>.list", "<builtin>.chr", "<builtin>.map", "<builtin>.ValueError", "<builtin>.bin", "<builtin>.range", "sre_compile.dis.dis_.print_2"], "sre_compile._compile_info": ["sre_compile._get_charset_prefix", "sre_parse.SubPattern.getwidth", "<builtin>.min", "sre_compile._optimize_charset", "sre_compile._generate_overlap_table", "sre_compile._get_literal_prefix", "sre_compile._compile_charset", "<builtin>.len"], "sre_compile._compile": ["_sre.unicode_iscased", "_sre.ascii_iscased", "sre_compile._simple", "_sre.unicode_tolower", "sre_compile._combine_flags", "sre_compile._optimize_charset", "sre_constants.error.__init__", "_sre.ascii_tolower", "sre_compile._compile_charset", "sre_compile._compile"], "sre_parse.Tokenizer.error": ["sre_parse.Tokenizer.error", "sre_parse.Tokenizer.tell"], "sre_parse.SubPattern.dump": ["<builtin>.print", "<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.str"], "sre_parse._parse_sub": ["sre_parse.Tokenizer.match", "sre_parse.SubPattern.append", "sre_parse.SubPattern.__init__", "sre_parse._parse", "sre_parse.Tokenizer.tell", "<builtin>.len"], "sre_parse.Tokenizer.seek": ["sre_parse.Tokenizer.__next"], "sre_parse.State.__init__": [], "sre_parse.fix_flags": ["<builtin>.ValueError", "<builtin>.isinstance"], "sre_parse.Tokenizer.__init__": ["sre_parse.Tokenizer.__next", "<builtin>.isinstance", "<builtin>.str"], "_py_abc.get_cache_token": [], "_abc.get_cache_token": [], "collections.ChainMap.clear": [], "_collections_abc.MutableMapping.clear": ["_collections_abc.MutableMapping.popitem", "collections.ChainMap.popitem", "weakref.WeakKeyDictionary.popitem", "weakref.WeakValueDictionary.popitem"], "functools._find_impl": ["functools._compose_mro", "<builtin>.issubclass", "<builtin>.RuntimeError"], "sre_constants._NamedIntConstant": [], "sre_constants.dump": ["<builtin>.sorted"], "sre_constants.error": [], "sre_constants._makecodes": ["<builtin>.globals", "<builtin>.enumerate"], "functools._HashedSeq.__init__": [], "_weakrefset": ["_weakrefset._IterationGuard", "_weakrefset.WeakSet"], "_py_abc.ABCMeta": [], "_lzma": [], "lzma.LZMAFile": [], "_compression": ["_compression.BaseStream", "io", "_compression.DecompressReader"], "threading": ["_threading_local", "threading._MainThread", "threading.Condition", "_weakrefset", "_weakrefset.WeakSet.__init__", "threading.Timer", "<builtin>.set", "collections.namedtuple", "threading._DummyThread", "threading.Thread", "collections", "_thread.allocate_lock", "itertools.count", "threading.Semaphore", "<builtin>.hasattr", "threading._RLock", "threading.BrokenBarrierError", "traceback", "threading.Event", "threading.BoundedSemaphore", "threading._MainThread.__init__", "threading.Barrier", "os"], "bz2.BZ2File": [], "warnings": ["warnings._OptionError", "warnings.WarningMessage", "warnings._processoptions", "warnings.catch_warnings", "<builtin>.hasattr", "warnings.filterwarnings", "warnings.simplefilter"], "_bz2": [], "encodings": ["encodings.CodecRegistryError", "codecs"], "locale._print_locale": ["locale.getlocale", "<builtin>.print", "locale._print_locale._init_categories", "locale.setlocale", "locale.getdefaultlocale", "locale.resetlocale"], "locale._test": ["locale.atoi", "locale.str", "locale.atof", "<builtin>.print", "locale.setlocale", "locale.format_string"], "encodings.aliases": [], "<builtin>.sorted": [], "genericpath._check_arg_types": ["<builtin>.isinstance", "<builtin>.TypeError"], "ntpath.splitdrive": ["<builtin>.isinstance", "_io._BufferedIOBase.replace", "sys.base_prefix.replace", "sys.path.replace", "<builtin>.len"], "sys.base_prefix.endswith": [], "sys.path.endswith": [], "genericpath": ["os", "stat"], "<builtin>.dir": [], "os._createenviron.check_str": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.type"], "sys.getfilesystemencoding": [], "sys.getfilesystemencodeerrors": [], "sys.getwindowsversion": [], "doctest.DocTestFinder": [], "doctest._test": ["argparse.ArgumentParser.__init__", "argparse.ArgumentParser.parse_args", "doctest.testfile", "argparse._ActionsContainer.add_argument", "ntpath.split", "posixpath.split", "<builtin>.__import__", "sys.path.insert", "doctest.testmod", "argparse"], "__future__": ["__future__._Feature.__init__", "__future__._Feature"], "doctest.register_optionflag": ["<builtin>.len"], "doctest.DocTestParser": ["re.compile"], "doctest.DocTestFailure": [], "doctest.DocFileCase": [], "doctest._TestClass": [], "doctest._DocTestSuite": [], "linecache": ["tokenize", "functools", "os"], "doctest._SpoofOut": [], "difflib": ["collections.namedtuple", "heapq", "difflib.SequenceMatcher", "difflib._test", "re", "collections", "difflib.HtmlDiff", "difflib.Differ"], "doctest.Example": [], "doctest.SkipDocTestCase": [], "doctest.DocTestCase": [], "doctest.OutputChecker": [], "unittest": ["unittest.result", "unittest.suite", "unittest.signals", "unittest.runner", "unittest.loader", "unittest.main", "unittest.case", "unittest.async_case"], "traceback": ["traceback.StackSummary", "traceback.TracebackException", "collections", "linecache", "traceback.FrameSummary"], "doctest.DocTestRunner": ["re.compile"], "inspect": ["<builtin>.object", "inspect.BlockFinder", "token", "inspect.Parameter", "warnings", "operator", "abc", "inspect._ParameterKind", "collections.namedtuple", "collections", "linecache", "inspect.EndOfBlock", "<builtin>.globals", "inspect._empty", "dis", "inspect._main", "re", "<builtin>.type", "<builtin>.hasattr", "inspect.BoundArguments", "tokenize", "importlib.machinery", "inspect._void", "functools", "collections.abc", "inspect.Signature", "enum", "os", "types"], "doctest._OutputRedirectingPdb": [], "doctest.DebugRunner": [], "doctest.DocTest": [], "doctest.UnexpectedException": [], "doctest.DocTestFinder.find": ["inspect.getmodule", "doctest.DocTestFinder._find", "linecache.getlines", "<builtin>.type", "inspect.getsourcefile", "<builtin>.ValueError", "inspect.getfile", "<builtin>.getattr"], "doctest.DocTestRunner.summarize": ["<builtin>.print", "<builtin>.len"], "doctest.DebugRunner.run": ["doctest.DocTestRunner.run", "doctest.DebugRunner.run"], "inspect.ismodule": ["<builtin>.isinstance"], "doctest.DocTestRunner.run": ["sys.gettrace", "doctest._extract_future_flags", "pdb.Pdb.reset", "sys.settrace", "doctest._OutputRedirectingPdb.__init__", "doctest.DocTestRunner.__run", "sys.stdout.encoding.lower"], "sys.modules.get": [], "doctest.DocTestRunner.__init__": ["io.StringIO.__init__", "_io.StringIO.__init__"], "doctest.DocTestFinder.__init__": [], "doctest.DocTestRunner.merge": [], "argparse.ArgumentParser._parse_known_args.consume_positionals": ["argparse.ArgumentParser._parse_known_args.take_action", "<builtin>.zip", "argparse.ArgumentParser._match_arguments_partial", "<builtin>.len"], "argparse.ArgumentParser._get_positional_actions": [], "argparse.ArgumentParser._parse_known_args.consume_optional": ["argparse.ArgumentError.__init__", "argparse.ArgumentParser._parse_known_args.take_action", "gettext.gettext", "argparse.ArgumentParser._match_argument"], "argparse.ArgumentParser._get_value": ["<builtin>.callable", "<builtin>.repr", "gettext.gettext", "<builtin>.str", "argparse._ActionsContainer._registry_get", "argparse.ArgumentError.__init__", "sys.exc_info", "<builtin>.getattr"], "<builtin>.min": [], "<builtin>.max": [], "argparse._get_action_name": [], "argparse.ArgumentParser._parse_optional": ["argparse.ArgumentParser._get_option_tuples", "gettext.gettext", "argparse.ArgumentParser.error", "<builtin>.len"], "argparse.ArgumentParser._read_args_from_files": ["<builtin>.open", "argparse.ArgumentParser.error", "<builtin>.str", "argparse.ArgumentParser.convert_arg_line_to_args", "sys.exc_info", "argparse.ArgumentParser._read_args_from_files"], "gettext.translation": ["<builtin>.open", "warnings.warn", "warnings.catch_warnings.__init__", "copy", "<builtin>.FileNotFoundError", "gettext.NullTranslations.__init__", "gettext.find", "warnings.filterwarnings", "posixpath.abspath", "warnings", "ntpath.abspath"], "gettext.NullTranslations.gettext": [], "argparse.ArgumentParser._print_message": ["sys.stdout.write", "sys.stderr.write"], "argparse.ArgumentParser.format_usage": ["argparse.HelpFormatter.add_usage", "argparse.HelpFormatter.format_help", "argparse.ArgumentParser._get_formatter"], "argparse._ActionsContainer._get_handler": ["<builtin>.ValueError", "gettext.gettext", "<builtin>.getattr"], "shutil.get_terminal_size": ["sys.__stdout__.fileno", "<builtin>.int"], "argparse.HelpFormatter._Section.__init__": [], "argparse._MutuallyExclusiveGroup.__init__": ["<builtin>.super"], "ntpath._get_bothseps": ["<builtin>.isinstance"], "operator.itemgetter.__init__": [], "<builtin>.property": [], "sre_compile._hex_code": [], "sre_compile.dis.dis_.print_": ["<builtin>.print"], "<builtin>.bin": [], "sre_compile.dis.dis_.print_2": ["<builtin>.print"], "sre_compile._get_charset_prefix": ["sre_compile._get_iscased", "_sre.unicode_iscased", "<builtin>.any", "_sre.ascii_iscased", "sre_compile._combine_flags", "<builtin>.map", "<builtin>.range"], "sre_parse.SubPattern.getwidth": ["<builtin>.max", "<builtin>.min"], "sre_compile._optimize_charset": ["_sre.unicode_iscased", "<builtin>.any", "_sre.ascii_iscased", "_sre.unicode_tolower", "sre_compile._mk_bitmap", "<builtin>.map", "<builtin>.bytearray", "_sre.ascii_tolower", "<builtin>.range", "<builtin>.bytes", "sre_compile._bytes_to_codes", "<builtin>.len"], "sre_compile._generate_overlap_table": ["<builtin>.range", "<builtin>.len"], "sre_compile._get_literal_prefix": ["sre_compile._get_iscased", "_sre.unicode_iscased", "sre_compile._combine_flags", "_sre.ascii_iscased", "sre_compile._get_literal_prefix", "<builtin>.len"], "sre_compile._compile_charset": ["sre_constants.error.__init__"], "_sre.unicode_iscased": [], "_sre.ascii_iscased": [], "sre_compile._simple": ["sre_compile._simple", "<builtin>.len"], "_sre.unicode_tolower": [], "sre_compile._combine_flags": [], "sre_constants.error.__init__": ["<builtin>.super", "<builtin>.isinstance"], "_sre.ascii_tolower": [], "sre_parse.Tokenizer.tell": ["<builtin>.len"], "sre_parse.Tokenizer.match": ["sre_parse.Tokenizer.__next"], "sre_parse.SubPattern.append": [], "sre_parse.SubPattern.__init__": [], "sre_parse._parse": ["sre_parse._escape", "sre_parse.State.opengroup", "sre_parse.State.checklookbehindgroup", "sre_parse._parse", "sre_parse._uniq", "sre_parse.State.closegroup", "sre_parse.Tokenizer.tell", "sre_parse._parse_flags", "sre_parse.Tokenizer.match", "sre_parse.Tokenizer.get", "<builtin>.int", "sre_parse._class_escape", "<builtin>.AssertionError", "sre_parse.SubPattern.append", "sre_parse.Tokenizer.error", "sre_parse._parse_sub", "<builtin>.OverflowError", "sre_parse.State.checkgroup", "<builtin>.len", "sre_parse.SubPattern.__init__", "warnings.warn", "sre_parse.Tokenizer.seek", "sre_parse.Tokenizer.getuntil", "<builtin>.range", "warnings"], "sre_parse.Tokenizer.__next": ["sre_parse.Tokenizer.error", "<builtin>.len"], "_collections_abc.MutableMapping.popitem": ["<builtin>.iter", "<builtin>.next"], "collections.ChainMap.popitem": ["<builtin>.KeyError"], "weakref.WeakKeyDictionary.popitem": [], "weakref.WeakValueDictionary.popitem": ["weakref.WeakValueDictionary._commit_removals"], "functools._compose_mro": ["<builtin>.set", "<builtin>.issubclass", "functools._compose_mro.is_related", "functools._c3_mro", "functools._compose_mro.is_strict_base"], "<builtin>.issubclass": [], "<builtin>.RuntimeError": [], "_weakrefset._IterationGuard": [], "_weakrefset.WeakSet": [], "_compression.BaseStream": [], "_compression.DecompressReader": [], "_threading_local": ["threading", "_threading_local._localimpl", "_threading_local.local", "contextlib", "weakref", "contextlib.contextmanager"], "threading._MainThread": [], "threading.Condition": [], "_weakrefset.WeakSet.__init__": ["<builtin>.set", "weakref.WeakKeyDictionary.update", "weakref.WeakValueDictionary.update", "_weakrefset.WeakSet.update"], "threading.Timer": [], "threading._DummyThread": [], "threading.Thread": [], "_thread.allocate_lock": [], "itertools.count": [], "threading.Semaphore": [], "threading._RLock": [], "threading.BrokenBarrierError": [], "threading.Event": [], "threading.BoundedSemaphore": [], "threading._MainThread.__init__": ["threading.Thread.__init__", "threading.Thread._set_tstate_lock", "threading.Thread._set_ident", "threading.Event.set", "threading.Thread._set_native_id"], "threading.Barrier": [], "warnings._OptionError": [], "warnings.WarningMessage": [], "warnings._processoptions": ["warnings._setoption", "<builtin>.print"], "warnings.catch_warnings": [], "warnings.filterwarnings": ["<builtin>.issubclass", "re.compile", "<builtin>.isinstance", "re", "warnings._add_filter"], "warnings.simplefilter": ["warnings._add_filter", "<builtin>.isinstance"], "encodings.CodecRegistryError": [], "codecs": ["codecs.StreamRecoder", "encodings", "codecs.IncrementalEncoder", "codecs.BufferedIncrementalEncoder", "codecs.IncrementalDecoder", "codecs.CodecInfo", "codecs.BufferedIncrementalDecoder", "codecs.StreamReaderWriter", "codecs.Codec", "codecs.StreamWriter", "codecs.EncodedFile", "codecs.StreamReader", "<builtin>.SystemError"], "locale.getlocale": ["locale.setlocale", "locale._parse_localename", "<builtin>.TypeError"], "locale._print_locale._init_categories": ["<builtin>.globals"], "locale.setlocale": ["locale._build_localename", "locale.normalize", "locale.setlocale", "<builtin>.isinstance"], "locale.getdefaultlocale": ["<builtin>.int", "os", "_locale._getdefaultlocale", "locale._parse_localename"], "locale.resetlocale": ["locale.getdefaultlocale", "locale.setlocale", "locale._build_localename"], "locale.atoi": ["locale.delocalize", "<builtin>.int"], "locale.str": ["locale._format"], "locale.atof": ["locale.delocalize"], "locale.format_string": ["<builtin>.list", "<builtin>.tuple", "<builtin>.isinstance", "locale._format"], "_io._BufferedIOBase.replace": [], "sys.base_prefix.replace": [], "sys.path.replace": [], "doctest.testfile": ["doctest.DocTestRunner.summarize", "doctest._load_testfile", "doctest.DocTestParser.get_doctest", "doctest.DebugRunner.run", "posixpath.basename", "doctest.DocTestRunner.run", "<builtin>.ValueError", "doctest.DocTestRunner.__init__", "ntpath.basename", "doctest.DocTestRunner.merge"], "posixpath.split": ["sys.base_prefix.rfind", "sys.path.rfind", "<builtin>.len", "posixpath._get_sep"], "<builtin>.__import__": [], "sys.path.insert": [], "__future__._Feature.__init__": [], "__future__._Feature": [], "tokenize": ["<builtin>.set", "tokenize.Untokenizer", "token", "codecs", "tokenize.any", "tokenize._all_string_prefixes", "re.compile", "re", "tokenize.TokenError", "tokenize.main", "tokenize.group", "collections", "<builtin>.sorted", "<builtin>.map", "io", "tokenize.TokenInfo", "tokenize.maybe", "tokenize.StopTokenizing"], "difflib.SequenceMatcher": [], "difflib._test": ["difflib", "doctest", "doctest.testmod"], "difflib.HtmlDiff": [], "difflib.Differ": [], "unittest.result": ["functools", "traceback", "unittest.result.TestResult", "io", "unittest.util"], "unittest.suite": ["unittest.suite._ErrorHolder", "unittest.suite.TestSuite", "unittest.case", "unittest.suite._DebugResult", "unittest.suite.BaseTestSuite", "unittest.util"], "unittest.signals": ["functools", "weakref.WeakKeyDictionary.__init__", "unittest.signals._InterruptHandler", "weakref", "signal"], "unittest.runner": ["unittest.result", "unittest.signals", "unittest.runner.TextTestRunner", "unittest.runner.TextTestResult", "unittest.runner._WritelnDecorator", "warnings"], "unittest.loader": ["functools", "unittest.suite", "traceback", "fnmatch", "unittest.loader.TestLoader", "re.compile", "re", "warnings", "unittest.loader._FailedTest", "unittest.case", "unittest.loader.TestLoader.__init__", "os", "unittest.util", "types"], "unittest.main": ["unittest.main.TestProgram", "unittest.signals", "unittest.runner", "unittest.loader", "os", "argparse"], "unittest.case": ["<builtin>.object", "unittest.case._AssertRaisesContext", "pprint", "unittest.case._AssertWarnsContext", "unittest.case._AssertLogsContext", "unittest.case._AssertRaisesBaseContext", "collections.namedtuple", "unittest.case._ShouldStop", "collections", "unittest.case._BaseTestCaseContext", "unittest.case.FunctionTestCase", "unittest.case._CapturingHandler", "difflib", "unittest.case._UnexpectedSuccess", "unittest.case._OrderedChainMap", "re", "contextlib", "unittest.util", "unittest.result", "functools", "traceback", "unittest.case.SkipTest", "unittest.case._SubTest", "unittest.case._Outcome", "logging", "unittest.case.TestCase", "warnings", "types"], "unittest.async_case": ["inspect", "asyncio", "unittest.async_case.IsolatedAsyncioTestCase", "unittest.case"], "traceback.StackSummary": [], "traceback.TracebackException": [], "traceback.FrameSummary": [], "inspect.BlockFinder": [], "token": ["<builtin>.globals", "<builtin>.isinstance"], "inspect.Parameter": [], "inspect._ParameterKind": [], "inspect.EndOfBlock": [], "inspect._empty": [], "dis": ["collections.namedtuple", "dis.Bytecode", "dis._test", "opcode", "collections", "io", "dis.Instruction", "types"], "inspect._main": ["argparse.ArgumentParser.__init__", "argparse.ArgumentParser.parse_args", "inspect.findsource", "inspect.getsource", "<builtin>.type", "importlib.import_module", "importlib", "argparse._ActionsContainer.add_argument", "<builtin>.print", "inspect.getsourcefile", "<builtin>.repr", "<builtin>.hasattr", "sys.exit", "argparse", "<builtin>.getattr"], "inspect.BoundArguments": [], "importlib.machinery": [], "inspect._void": [], "inspect.Signature": [], "inspect.getmodule": ["posixpath.realpath", "ntpath.realpath", "<builtin>.hasattr", "inspect.ismodule", "sys.modules.copy", "sys.modules.get", "inspect.getabsfile", "<builtin>.getattr"], "doctest.DocTestFinder._find": ["doctest.DocTestFinder._find", "inspect.unwrap", "<builtin>.getattr", "inspect.isclass", "<builtin>.isinstance", "doctest.DocTestFinder._from_module", "<builtin>.id", "<builtin>.print", "inspect.ismodule", "<builtin>.type", "<builtin>.ValueError", "inspect.isroutine", "doctest.DocTestFinder._get_test"], "linecache.getlines": ["linecache.clearcache", "linecache.updatecache", "<builtin>.len"], "inspect.getsourcefile": ["inspect.getmodule", "ntpath.splitext", "posixpath.exists", "<builtin>.any", "ntpath.exists", "posixpath.splitext", "inspect.getfile", "<builtin>.getattr"], "inspect.getfile": ["<builtin>.TypeError", "inspect.ismethod", "inspect.isclass", "inspect.iscode", "<builtin>.hasattr", "<builtin>.type", "inspect.ismodule", "sys.modules.get", "inspect.isfunction", "inspect.istraceback", "inspect.isframe", "<builtin>.getattr"], "sys.gettrace": [], "doctest._extract_future_flags": ["<builtin>.getattr"], "pdb.Pdb.reset": [], "sys.settrace": [], "doctest._OutputRedirectingPdb.__init__": ["pdb.Pdb.__init__"], "doctest.DocTestRunner.__run": ["doctest.DebugRunner.report_failure", "<builtin>.compile", "<builtin>.enumerate", "traceback.format_exception_only", "doctest.DocTestRunner.report_unexpected_exception", "doctest._SpoofOut.truncate", "doctest._exception_traceback", "doctest.DocTestRunner.report_failure", "doctest.DocTestRunner.__record_outcome", "doctest._SpoofOut.getvalue", "doctest.DocTestRunner.report_success", "sys.exc_info", "doctest.DebugRunner.report_unexpected_exception", "doctest._OutputRedirectingPdb.set_continue", "<builtin>.range", "doctest.DocTestRunner.report_start", "doctest._strip_exception_details", "<builtin>.exec"], "sys.stdout.encoding.lower": [], "io.StringIO.__init__": [], "_io.StringIO.__init__": [], "argparse.ArgumentParser._parse_known_args.take_action": ["argparse.ArgumentError.__init__", "argparse._get_action_name", "gettext.gettext", "argparse.ArgumentParser._get_values"], "argparse.ArgumentParser._match_arguments_partial": ["re.match", "<builtin>.range", "argparse.ArgumentParser._get_nargs_pattern", "<builtin>.len"], "argparse.ArgumentError.__init__": ["argparse._get_action_name"], "argparse.ArgumentParser._match_argument": ["argparse.ArgumentParser._get_nargs_pattern", "gettext.gettext", "argparse.ArgumentError.__init__", "re.match", "gettext.ngettext", "<builtin>.len"], "argparse.ArgumentParser._get_option_tuples": ["gettext.gettext", "argparse.ArgumentParser.error"], "argparse.ArgumentParser.convert_arg_line_to_args": [], "warnings.warn": ["warnings._next_external_frame", "sys.__dict__.setdefault", "<builtin>.TypeError", "<builtin>.issubclass", "sys._getframe", "<builtin>.isinstance", "<builtin>.type", "_warnings.warn_explicit", "<builtin>.range", "warnings._is_internal_frame"], "warnings.catch_warnings.__init__": [], "copy": ["<builtin>.getattr", "copyreg", "<builtin>.type", "weakref", "copy.Error", "types"], "<builtin>.FileNotFoundError": [], "gettext.NullTranslations.__init__": ["gettext.NullTranslations._parse"], "gettext.find": ["posixpath.exists", "ntpath.join", "ntpath.exists", "gettext._expand_lang", "posixpath.join"], "posixpath.abspath": ["posixpath.join", "posixpath.isabs", "<builtin>.isinstance", "posixpath.normpath"], "ntpath.abspath": ["ntpath._abspath_fallback", "ntpath.normpath", "nt._getfullpathname"], "argparse.HelpFormatter.add_usage": ["argparse.HelpFormatter._add_item"], "argparse.HelpFormatter.format_help": ["argparse.HelpFormatter._Section.format_help"], "sys.__stdout__.fileno": [], "sre_compile._get_iscased": [], "<builtin>.any": [], "sre_compile._mk_bitmap": ["<builtin>.range", "<builtin>.len"], "<builtin>.bytearray": [], "<builtin>.bytes": [], "sre_compile._bytes_to_codes": ["<builtin>.memoryview", "<builtin>.len"], "sre_parse._escape": ["sre_parse.Tokenizer.match", "sre_parse.Tokenizer.error", "unicodedata", "sre_parse.Tokenizer.get", "<builtin>.int", "sre_parse.State.checklookbehindgroup", "<builtin>.chr", "sre_parse.Tokenizer.getuntil", "<builtin>.ord", "sre_parse.State.checkgroup", "sre_parse.Tokenizer.getwhile", "<builtin>.len"], "sre_parse.State.opengroup": ["sre_constants.error.__init__"], "sre_parse.State.checklookbehindgroup": ["sre_parse.Tokenizer.error", "sre_parse.State.checkgroup"], "sre_parse._uniq": ["<builtin>.list"], "sre_parse.State.closegroup": ["sre_parse.SubPattern.getwidth"], "sre_parse._parse_flags": ["sre_parse.Tokenizer.error", "sre_parse.Tokenizer.get", "<builtin>.len"], "sre_parse.Tokenizer.get": ["sre_parse.Tokenizer.__next"], "sre_parse._class_escape": ["sre_parse.Tokenizer.match", "sre_parse.Tokenizer.error", "unicodedata", "<builtin>.int", "<builtin>.chr", "sre_parse.Tokenizer.getuntil", "<builtin>.ord", "sre_parse.Tokenizer.getwhile", "<builtin>.len"], "<builtin>.AssertionError": [], "<builtin>.OverflowError": [], "sre_parse.State.checkgroup": [], "sre_parse.Tokenizer.getuntil": ["<builtin>.len", "sre_parse.Tokenizer.error", "sre_parse.Tokenizer.__next"], "<builtin>.KeyError": [], "weakref.WeakValueDictionary._commit_removals": ["_weakref._remove_dead_weakref"], "functools._compose_mro.is_related": ["<builtin>.issubclass", "<builtin>.hasattr"], "functools._c3_mro": ["functools._c3_merge", "<builtin>.any", "<builtin>.issubclass", "<builtin>.enumerate", "<builtin>.hasattr", "<builtin>.list", "functools._c3_mro", "<builtin>.reversed", "<builtin>.len"], "functools._compose_mro.is_strict_base": [], "_threading_local._localimpl": [], "_threading_local.local": [], "weakref": ["weakref.finalize", "weakref.WeakValueDictionary", "weakref.KeyedRef", "collections.abc", "weakref.WeakMethod", "_weakrefset", "weakref.WeakKeyDictionary"], "weakref.WeakKeyDictionary.update": ["_weakref.ref", "<builtin>.type", "<builtin>.hasattr", "<builtin>.len"], "weakref.WeakValueDictionary.update": ["<builtin>.dict", "weakref.KeyedRef.__init__", "<builtin>.hasattr"], "_weakrefset.WeakSet.update": ["_weakrefset.WeakSet._commit_removals", "_weakrefset.WeakSet.add"], "threading.Thread.__init__": ["threading._newname", "threading.Event.__init__", "threading.current_thread", "<builtin>.str", "threading._make_invoke_excepthook", "_weakrefset.WeakSet.add"], "threading.Thread._set_tstate_lock": ["_thread._set_sentinel"], "threading.Thread._set_ident": ["_thread.get_ident"], "threading.Event.set": ["threading.Condition.notify_all"], "threading.Thread._set_native_id": ["_thread.get_native_id"], "warnings._setoption": ["warnings._getaction", "re.escape", "re", "<builtin>.int", "warnings._getcategory", "warnings.filterwarnings", "sys.warnoptions.split", "<builtin>.len"], "warnings._add_filter": ["_warnings.filters.remove", "_warnings.filters.append", "_warnings._filters_mutated", "_warnings.filters.insert"], "codecs.StreamRecoder": [], "codecs.IncrementalEncoder": [], "codecs.BufferedIncrementalEncoder": [], "codecs.IncrementalDecoder": [], "codecs.CodecInfo": [], "codecs.BufferedIncrementalDecoder": [], "codecs.StreamReaderWriter": [], "codecs.Codec": [], "codecs.StreamWriter": [], "codecs.EncodedFile": ["codecs.StreamRecoder.__init__"], "codecs.StreamReader": [], "<builtin>.SystemError": [], "locale._parse_localename": ["locale.normalize", "<builtin>.tuple", "<builtin>.ValueError"], "locale._build_localename": ["<builtin>.TypeError"], "locale.normalize": ["locale._append_modifier", "locale._replace_encoding"], "_locale._getdefaultlocale": [], "locale.delocalize": ["locale.localeconv"], "locale._format": ["locale._strip_padding", "locale._group", "locale.localeconv"], "doctest._load_testfile": ["doctest._module_relative_path", "<builtin>.open", "doctest._newline_convert", "<builtin>.hasattr", "doctest._normalize_module", "<builtin>.getattr"], "doctest.DocTestParser.get_doctest": ["doctest.DocTest.__init__", "doctest.DocTestParser.get_examples"], "tokenize.Untokenizer": [], "tokenize.any": ["tokenize.group"], "tokenize._all_string_prefixes": ["itertools.permutations", "itertools.product"], "tokenize.TokenError": [], "tokenize.main": ["argparse.ArgumentParser.__init__", "argparse.ArgumentParser.parse_args", "tokenize.main.error", "tokenize.tokenize", "builtins.open", "<builtin>.print", "argparse._ActionsContainer.add_argument", "<builtin>.list", "tokenize._tokenize", "tokenize.main.perror", "argparse"], "tokenize.group": [], "tokenize.TokenInfo": [], "tokenize.maybe": ["tokenize.group"], "tokenize.StopTokenizing": [], "unittest.result.TestResult": ["unittest.result.TestResult.failfast", "unittest.main.TestProgram.__init__.failfast"], "unittest.util": ["posixpath", "collections", "collections.namedtuple"], "unittest.suite._ErrorHolder": [], "unittest.suite.TestSuite": [], "unittest.suite._DebugResult": [], "unittest.suite.BaseTestSuite": [], "weakref.WeakKeyDictionary.__init__": ["<builtin>.set", "weakref.WeakKeyDictionary.update", "_weakrefset.WeakSet.update"], "unittest.signals._InterruptHandler": [], "signal": ["functools.wraps", "functools", "_functools.partial", "enum", "<builtin>.globals"], "unittest.runner.TextTestRunner": [], "unittest.runner.TextTestResult": [], "unittest.runner._WritelnDecorator": [], "unittest.loader.TestLoader": ["<builtin>.staticmethod"], "unittest.loader._FailedTest": [], "unittest.loader.TestLoader.__init__": ["<builtin>.super", "<builtin>.set"], "unittest.main.TestProgram": [], "unittest.case._AssertRaisesContext": [], "pprint": ["pprint.PrettyPrinter", "re", "<builtin>.type", "collections", "pprint._safe_key", "<builtin>.frozenset", "io", "pprint._perfcheck", "types"], "unittest.case._AssertWarnsContext": [], "unittest.case._AssertLogsContext": [], "unittest.case._AssertRaisesBaseContext": [], "unittest.case._ShouldStop": [], "unittest.case._BaseTestCaseContext": [], "unittest.case.FunctionTestCase": [], "unittest.case._CapturingHandler": [], "unittest.case._UnexpectedSuccess": [], "unittest.case._OrderedChainMap": [], "unittest.case.SkipTest": [], "unittest.case._SubTest": [], "unittest.case._Outcome": ["contextlib.contextmanager"], "logging": ["logging.Handler", "threading", "logging.LoggerAdapter", "ntpath.normcase", "logging.Filter", "logging._StderrHandler.__init__", "logging.BufferingFormatter", "logging.LogRecord", "logging.Formatter", "logging.Manager", "weakref", "logging.RootLogger.__init__", "time.time", "posixpath.normcase", "logging.PlaceHolder", "weakref.WeakValueDictionary.__init__", "logging.StreamHandler", "logging.Manager.__init__", "re", "<builtin>.hasattr", "logging.Logger", "string", "logging.StringTemplateStyle", "logging.FileHandler", "logging.NullHandler", "logging.Formatter.__init__", "traceback", "collections.abc", "os", "atexit.register", "logging.RootLogger", "io", "logging.Filterer", "logging._StderrHandler", "threading.RLock", "logging.StrFormatStyle", "warnings", "logging.PercentStyle"], "unittest.case.TestCase": ["unittest.case.TestCase._deprecate", "contextlib.contextmanager"], "asyncio": ["asyncio.windows_events"], "unittest.async_case.IsolatedAsyncioTestCase": [], "dis.Bytecode": [], "dis._test": ["argparse.FileType.__init__", "argparse.ArgumentParser.__init__", "argparse.ArgumentParser.parse_args", "dis.dis", "<builtin>.compile", "argparse._ActionsContainer.add_argument", "argparse"], "opcode": ["opcode.jabs_op", "_opcode", "opcode.name_op", "opcode.jrel_op", "opcode.def_op", "<builtin>.range"], "dis.Instruction": [], "inspect.findsource": ["inspect.getmodule", "linecache.getlines", "inspect.ismethod", "inspect.isclass", "re.compile", "inspect.iscode", "<builtin>.hasattr", "inspect.istraceback", "inspect.ismodule", "inspect.getsourcefile", "inspect.getfile", "inspect.isfunction", "linecache.checkcache", "<builtin>.OSError", "<builtin>.range", "inspect.isframe", "<builtin>.len"], "inspect.getsource": ["inspect.getsourcelines"], "importlib.import_module": ["_bootstrap._gcd_import", "<builtin>.TypeError", "_frozen_importlib._gcd_import"], "importlib": ["_bootstrap._setup", "_frozen_importlib_external._setup", "_bootstrap_external._setup", "_frozen_importlib._setup", "importlib._bootstrap_external", "warnings", "types"], "posixpath.realpath": ["posixpath.abspath", "posixpath._joinrealpath"], "ntpath.realpath": ["<builtin>.len", "ntpath.join", "<builtin>.isinstance", "ntpath.normcase", "sys.path.startswith", "ntpath._getfinalpathname_nonstrict", "ntpath.normpath", "ntpath.isabs", "sys.base_prefix.startswith", "nt._getfinalpathname"], "sys.modules.copy": [], "inspect.getabsfile": ["posixpath.normcase", "inspect.getsourcefile", "ntpath.normcase", "inspect.getfile", "posixpath.abspath", "ntpath.abspath"], "inspect.unwrap": ["sys.getrecursionlimit", "inspect.unwrap._is_wrapper", "<builtin>.id", "<builtin>.ValueError", "<builtin>.len"], "inspect.isclass": ["<builtin>.isinstance"], "doctest.DocTestFinder._from_module": ["inspect.getmodule", "inspect.ismethoddescriptor", "inspect.isclass", "<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.ValueError", "inspect.isfunction"], "<builtin>.id": [], "inspect.isroutine": ["inspect.ismethod", "inspect.isbuiltin", "inspect.ismethoddescriptor", "inspect.isfunction"], "doctest.DocTestFinder._get_test": ["doctest.DocTestFinder._find_lineno", "doctest.DocTestParser.get_doctest", "<builtin>.isinstance", "<builtin>.str", "<builtin>.getattr"], "linecache.clearcache": [], "linecache.updatecache": ["linecache.lazycache", "posixpath.isabs", "ntpath.join", "posixpath.join", "ntpath.isabs", "<builtin>.len"], "ntpath.splitext": ["genericpath._splitext", "<builtin>.isinstance"], "posixpath.exists": [], "ntpath.exists": [], "posixpath.splitext": ["genericpath._splitext", "<builtin>.isinstance"], "inspect.ismethod": ["<builtin>.isinstance"], "inspect.iscode": ["<builtin>.isinstance"], "inspect.isfunction": ["<builtin>.isinstance"], "inspect.istraceback": ["<builtin>.isinstance"], "inspect.isframe": ["<builtin>.isinstance"], "pdb.Pdb.__init__": [], "doctest.DebugRunner.report_failure": ["doctest.DocTestFailure.__init__"], "<builtin>.compile": [], "traceback.format_exception_only": ["<builtin>.list", "traceback.TracebackException.__init__", "traceback.TracebackException.format_exception_only"], "doctest.DocTestRunner.report_unexpected_exception": ["sys.stdout.write", "doctest._exception_traceback", "doctest.DocTestRunner._failure_header", "doctest._indent", "doctest.DocTestRunner.__init__", "doctest.SkipDocTestCase.__init__", "doctest.DocTest.__init__"], "doctest._SpoofOut.truncate": ["_io.StringIO.truncate", "io.StringIO.seek"], "doctest._exception_traceback": ["traceback.print_exception", "_io.StringIO"], "doctest.DocTestRunner.report_failure": ["sys.stdout.write", "doctest.DocTestRunner._failure_header", "doctest.DocTestRunner.__init__", "doctest.SkipDocTestCase.__init__", "doctest.DocTest.__init__"], "doctest.DocTestRunner.__record_outcome": [], "doctest._SpoofOut.getvalue": ["_io.StringIO.getvalue"], "doctest.DocTestRunner.report_success": ["sys.stdout.write", "doctest.DocTest.__init__", "doctest.DocTestRunner.__init__", "doctest.SkipDocTestCase.__init__"], "doctest.DebugRunner.report_unexpected_exception": ["doctest.UnexpectedException.__init__"], "doctest._OutputRedirectingPdb.set_continue": ["pdb.Pdb.set_continue"], "doctest.DocTestRunner.report_start": ["sys.stdout.write", "doctest._indent", "doctest.DocTestRunner.__init__", "doctest.SkipDocTestCase.__init__", "doctest.DocTest.__init__"], "doctest._strip_exception_details": ["<builtin>.len"], "argparse.ArgumentParser._get_values": ["argparse.ArgumentParser._get_value", "<builtin>.isinstance", "argparse.ArgumentParser._check_value", "<builtin>.len"], "re.match": ["re._compile"], "argparse.ArgumentParser._get_nargs_pattern": [], "gettext.ngettext": ["gettext.dngettext"], "warnings._next_external_frame": ["warnings._is_internal_frame"], "sys.__dict__.setdefault": [], "_warnings.warn_explicit": [], "warnings._is_internal_frame": [], "copy.Error": [], "gettext.NullTranslations._parse": [], "gettext._expand_lang": ["locale.normalize", "<builtin>.range"], "posixpath.isabs": ["sys.base_prefix.startswith", "sys.path.startswith", "posixpath._get_sep"], "posixpath.normpath": ["sys.path.split", "<builtin>.isinstance", "sys.base_prefix.split", "sys.path.startswith", "sys.base_prefix.startswith"], "ntpath._abspath_fallback": ["ntpath.normpath", "ntpath.isabs", "ntpath.join", "<builtin>.isinstance"], "ntpath.normpath": ["sys.path.split", "<builtin>.isinstance", "sys.base_prefix.lstrip", "sys.base_prefix.split", "sys.base_prefix.replace", "ntpath.splitdrive", "sys.path.startswith", "sys.path.lstrip", "sys.base_prefix.startswith", "sys.path.replace", "<builtin>.len"], "nt._getfullpathname": [], "argparse.HelpFormatter._add_item": [], "argparse.HelpFormatter._Section.format_help": ["argparse.HelpFormatter._indent", "argparse.HelpFormatter._join_parts", "argparse.HelpFormatter._dedent"], "<builtin>.memoryview": [], "unicodedata": [], "sre_parse.Tokenizer.getwhile": ["<builtin>.range", "sre_parse.Tokenizer.__next"], "_weakref._remove_dead_weakref": [], "functools._c3_merge": ["<builtin>.RuntimeError"], "weakref.finalize": ["weakref.finalize._Info", "itertools.count"], "weakref.WeakValueDictionary": [], "weakref.KeyedRef": [], "weakref.WeakMethod": [], "weakref.WeakKeyDictionary": [], "_weakref.ref": [], "weakref.KeyedRef.__init__": ["<builtin>.super"], "_weakrefset.WeakSet._commit_removals": [], "_weakrefset.WeakSet.add": ["_weakref.ref", "_weakrefset.WeakSet._commit_removals"], "threading._newname": [], "threading.Event.__init__": ["_thread.allocate_lock", "threading.Condition.__init__"], "threading.current_thread": ["threading._DummyThread.__init__", "_thread.get_ident"], "threading._make_invoke_excepthook": ["<builtin>.RuntimeError"], "_thread._set_sentinel": [], "_thread.get_ident": [], "threading.Condition.notify_all": ["threading.Condition.notify", "<builtin>.len"], "_thread.get_native_id": [], "warnings._getaction": [], "re.escape": ["<builtin>.isinstance", "<builtin>.str"], "warnings._getcategory": ["<builtin>.issubclass", "<builtin>.__import__", "<builtin>.getattr"], "sys.warnoptions.split": [], "_warnings.filters.remove": [], "_warnings.filters.append": [], "_warnings._filters_mutated": [], "_warnings.filters.insert": [], "codecs.StreamRecoder.__init__": [], "locale._append_modifier": ["locale._replace_encoding"], "locale._replace_encoding": ["encodings.normalize_encoding", "encodings.aliases.aliases.get"], "locale.localeconv": ["locale.localeconv"], "locale._strip_padding": ["<builtin>.len"], "locale._group": ["locale._grouping_intervals", "<builtin>.len", "locale.localeconv"], "doctest._module_relative_path": ["sys.path.split", "<builtin>.TypeError", "posixpath.exists", "ntpath.join", "ntpath.exists", "<builtin>.hasattr", "inspect.ismodule", "sys.base_prefix.split", "<builtin>.ValueError", "ntpath.split", "posixpath.split", "sys.path.startswith", "posixpath.join", "sys.base_prefix.startswith", "<builtin>.len"], "doctest._newline_convert": [], "doctest._normalize_module": ["<builtin>.TypeError", "<builtin>.locals", "sys._getframe", "<builtin>.isinstance", "<builtin>.__import__", "inspect.ismodule", "<builtin>.globals"], "doctest.DocTest.__init__": ["<builtin>.isinstance"], "doctest.DocTestParser.get_examples": ["<builtin>.isinstance", "doctest.DocTestParser.parse"], "itertools.permutations": [], "itertools.product": [], "tokenize.main.error": ["sys.exit", "tokenize.main.perror"], "tokenize.tokenize": ["tokenize.detect_encoding", "itertools.repeat", "itertools.chain", "tokenize._tokenize", "<builtin>.iter"], "builtins.open": [], "tokenize._tokenize": ["<builtin>.IndentationError", "tokenize._compile", "sys.stdin.readline", "<builtin>.len"], "tokenize.main.perror": ["sys.stderr.write"], "unittest.result.TestResult.failfast": [], "unittest.main.TestProgram.__init__.failfast": [], "<builtin>.staticmethod": [], "pprint.PrettyPrinter": [], "pprint._safe_key": [], "pprint._perfcheck": ["pprint._safe_repr", "<builtin>.print", "time.perf_counter", "pprint.PrettyPrinter.__init__", "pprint.PrettyPrinter.pformat"], "logging.Handler": ["<builtin>.property"], "logging.LoggerAdapter": [], "ntpath.normcase": ["sys.base_prefix.replace", "<builtin>.isinstance", "sys.path.replace"], "logging.Filter": [], "logging._StderrHandler.__init__": ["logging.Handler.__init__"], "logging.BufferingFormatter": [], "logging.LogRecord": [], "logging.Formatter": [], "logging.Manager": [], "logging.RootLogger.__init__": ["logging.Logger.__init__"], "time.time": [], "posixpath.normcase": [], "logging.PlaceHolder": [], "weakref.WeakValueDictionary.__init__": ["<builtin>.set"], "logging.StreamHandler": [], "logging.Manager.__init__": [], "logging.Logger": [], "string": ["string.Formatter", "string._TemplateMetaclass", "re", "collections", "string.Template"], "logging.StringTemplateStyle": [], "logging.FileHandler": [], "logging.NullHandler": [], "logging.Formatter.__init__": ["<builtin>.ValueError"], "atexit.register": [], "logging.RootLogger": [], "logging.Filterer": [], "logging._StderrHandler": [], "threading.RLock": ["threading._RLock.__init__", "_thread.RLock"], "logging.StrFormatStyle": ["re.compile"], "logging.PercentStyle": ["re.compile"], "unittest.case.TestCase._deprecate": [], "asyncio.windows_events": ["math", "asyncio.windows_events.WindowsProactorEventLoopPolicy", "asyncio.proactor_events", "socket", "asyncio.windows_events._OverlappedFuture", "asyncio.windows_events._WindowsSubprocessTransport", "asyncio.windows_events._WaitCancelFuture", "asyncio.windows_events._WaitHandleFuture", "asyncio.windows_utils", "asyncio.windows_events.ProactorEventLoop", "weakref", "asyncio.windows_events._BaseWaitHandleFuture", "asyncio.windows_events.PipeServer", "asyncio.windows_events.WindowsSelectorEventLoopPolicy", "struct", "asyncio.windows_events._WindowsSelectorEventLoop", "asyncio.windows_events.IocpProactor"], "argparse.FileType.__init__": [], "dis.dis": ["dis.dis", "<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.type", "<builtin>.hasattr", "<builtin>.print", "<builtin>.sorted", "dis.distb", "dis._disassemble_str", "dis._disassemble_recursive", "dis._disassemble_bytes"], "opcode.jabs_op": ["opcode.def_op"], "_opcode": [], "opcode.name_op": ["opcode.def_op"], "opcode.jrel_op": ["opcode.def_op"], "opcode.def_op": [], "linecache.checkcache": ["<builtin>.list", "<builtin>.len"], "<builtin>.OSError": [], "inspect.getsourcelines": ["inspect.findsource", "inspect.unwrap", "inspect.getblock", "inspect.ismodule", "inspect.istraceback", "inspect.isframe"], "_bootstrap._gcd_import": [], "_frozen_importlib._gcd_import": ["_frozen_importlib._resolve_name", "_frozen_importlib._sanity_check", "_frozen_importlib._find_and_load"], "_bootstrap._setup": [], "_frozen_importlib_external._setup": ["<builtin>.setattr", "<builtin>.all", "_bootstrap._builtin_from_name", "_bootstrap._imp.extension_suffixes", "_frozen_importlib._builtin_from_name", "_frozen_importlib_external._make_relax_case", "<builtin>.len"], "_bootstrap_external._setup": [], "_frozen_importlib._setup": ["<builtin>.setattr", "sys.modules.items", "<builtin>.isinstance", "<builtin>.type", "_imp.is_frozen", "_frozen_importlib._builtin_from_name", "_frozen_importlib._init_module_attrs", "_frozen_importlib._spec_from_module"], "importlib._bootstrap_external": ["importlib._bootstrap_external.SourceLoader", "importlib._bootstrap_external.FileFinder", "<builtin>.object", "importlib._bootstrap_external.SourcelessFileLoader", "importlib._bootstrap_external.ExtensionFileLoader", "importlib._bootstrap_external.PathFinder", "importlib._bootstrap_external._NamespaceLoader", "<builtin>.type", "importlib._bootstrap_external.SourceFileLoader", "importlib._bootstrap_external.FileLoader", "importlib._bootstrap_external._LoaderBasics", "importlib._bootstrap_external._NamespacePath", "importlib._bootstrap_external.WindowsRegistryFinder"], "posixpath._joinrealpath": ["posixpath.isabs", "sys.path.partition", "<builtin>.isinstance", "posixpath._joinrealpath", "posixpath.islink", "sys.base_prefix.partition", "posixpath.split", "posixpath.join"], "sys.path.startswith": [], "ntpath._getfinalpathname_nonstrict": ["ntpath._readlink_deep", "ntpath.join", "ntpath.split", "nt._getfinalpathname"], "ntpath.isabs": ["ntpath._get_bothseps", "<builtin>.isinstance", "sys.base_prefix.replace", "ntpath.splitdrive", "sys.path.replace", "<builtin>.len"], "sys.base_prefix.startswith": [], "nt._getfinalpathname": [], "sys.getrecursionlimit": [], "inspect.unwrap._is_wrapper": ["inspect._signature_from_callable.<lambda1>", "<builtin>.hasattr"], "inspect.ismethoddescriptor": ["inspect.ismethod", "inspect.isclass", "<builtin>.type", "<builtin>.hasattr", "inspect.isfunction"], "inspect.isbuiltin": ["<builtin>.isinstance"], "doctest.DocTestFinder._find_lineno": ["<builtin>.len", "inspect.ismethod", "<builtin>.enumerate", "re.compile", "inspect.isclass", "inspect.iscode", "<builtin>.range", "inspect.ismodule", "inspect.isfunction", "inspect.istraceback", "inspect.isframe", "<builtin>.getattr"], "linecache.lazycache": ["<builtin>.getattr", "<builtin>.len"], "genericpath._splitext": ["<builtin>.max", "sys.base_prefix.rfind", "sys.path.rfind"], "doctest.DocTestFailure.__init__": [], "traceback.TracebackException.__init__": ["<builtin>.set", "traceback.TracebackException.__init__", "traceback.StackSummary.extract", "traceback.TracebackException._load_lines", "<builtin>.issubclass", "traceback.walk_tb", "<builtin>.type", "<builtin>.id", "<builtin>.str", "traceback._some_str"], "traceback.TracebackException.format_exception_only": ["<builtin>.issubclass", "<builtin>.min", "<builtin>.str", "traceback._format_final_exc_line", "<builtin>.len"], "doctest.DocTestRunner._failure_header": ["doctest._indent"], "doctest._indent": ["re.sub"], "doctest.SkipDocTestCase.__init__": ["doctest.DocTestCase.__init__"], "_io.StringIO.truncate": [], "io.StringIO.seek": [], "traceback.print_exception": ["traceback.TracebackException.format", "traceback.TracebackException.__init__", "<builtin>.type", "<builtin>.print"], "_io.StringIO": [], "_io.StringIO.getvalue": [], "doctest.UnexpectedException.__init__": [], "pdb.Pdb.set_continue": [], "argparse.ArgumentParser._check_value": ["argparse.ArgumentError.__init__", "<builtin>.map", "gettext.gettext"], "gettext.dngettext": ["gettext.NullTranslations.ngettext", "gettext.translation"], "sys.path.split": [], "sys.base_prefix.split": [], "sys.base_prefix.lstrip": [], "sys.path.lstrip": [], "argparse.HelpFormatter._indent": [], "argparse.HelpFormatter._join_parts": [], "argparse.HelpFormatter._dedent": [], "weakref.finalize._Info": [], "threading.Condition.__init__": ["threading.RLock", "_collections.deque"], "threading._DummyThread.__init__": ["threading._newname", "threading.Thread.__init__", "threading.Thread._set_ident", "threading.Event.set", "threading.Thread._set_native_id"], "threading.Condition.notify": ["itertools.islice", "_collections.deque", "threading.Condition._is_owned", "<builtin>.RuntimeError"], "encodings.normalize_encoding": ["<builtin>.isinstance", "<builtin>.str"], "encodings.aliases.aliases.get": [], "locale._grouping_intervals": ["<builtin>.ValueError"], "<builtin>.locals": [], "doctest.DocTestParser.parse": ["doctest.Example.__init__", "doctest.DocTestParser._min_indent", "doctest.DocTestParser._parse_example", "<builtin>.len"], "tokenize.detect_encoding": ["tokenize.detect_encoding.find_cookie", "tokenize.detect_encoding.read_or_stop"], "itertools.repeat": [], "itertools.chain": [], "<builtin>.IndentationError": [], "tokenize._compile": ["re.compile"], "sys.stdin.readline": [], "pprint._safe_repr": ["pprint._recursion", "<builtin>.len", "<builtin>.issubclass", "pprint._safe_repr", "<builtin>.repr", "<builtin>.type", "<builtin>.id", "<builtin>.sorted", "<builtin>.getattr"], "time.perf_counter": [], "pprint.PrettyPrinter.__init__": ["<builtin>.bool", "<builtin>.ValueError", "<builtin>.int"], "pprint.PrettyPrinter.pformat": ["pprint.PrettyPrinter._format", "_io.StringIO"], "logging.Handler.__init__": ["logging.NullHandler.createLock", "logging.Handler.createLock", "logging._checkLevel", "logging._addHandlerRef", "logging.Filterer.__init__"], "logging.Logger.__init__": ["logging.Filterer.__init__", "logging._checkLevel"], "string.Formatter": [], "string._TemplateMetaclass": [], "string.Template": [], "threading._RLock.__init__": ["_thread.allocate_lock"], "_thread.RLock": [], "math": [], "asyncio.windows_events.WindowsProactorEventLoopPolicy": [], "asyncio.proactor_events": ["threading", "asyncio.proactor_events._ProactorBasePipeTransport", "asyncio.proactor_events._ProactorDuplexPipeTransport", "socket", "asyncio.proactor_events.BaseProactorEventLoop", "warnings", "collections", "asyncio.proactor_events._ProactorWritePipeTransport", "io", "asyncio.proactor_events._ProactorDatagramTransport", "asyncio.proactor_events._ProactorBaseWritePipeTransport", "signal", "os", "asyncio.proactor_events._ProactorReadPipeTransport", "asyncio.proactor_events._ProactorSocketTransport"], "socket": ["_socket", "<builtin>.object", "os._get_exports_list", "socket._GiveupOnSendfile", "<builtin>.hasattr", "enum", "socket.socket", "io", "selectors", "socket.SocketIO", "sys.platform.lower", "os", "<builtin>.getattr"], "asyncio.windows_events._OverlappedFuture": [], "asyncio.windows_events._WindowsSubprocessTransport": [], "asyncio.windows_events._WaitCancelFuture": [], "asyncio.windows_events._WaitHandleFuture": [], "asyncio.windows_utils": ["asyncio.windows_utils.PipeHandle", "tempfile", "os", "asyncio.windows_utils.Popen", "itertools.count", "subprocess", "warnings", "<builtin>.ImportError"], "asyncio.windows_events.ProactorEventLoop": [], "asyncio.windows_events._BaseWaitHandleFuture": [], "asyncio.windows_events.PipeServer": [], "asyncio.windows_events.WindowsSelectorEventLoopPolicy": [], "struct": ["_struct"], "asyncio.windows_events._WindowsSelectorEventLoop": [], "asyncio.windows_events.IocpProactor": [], "dis.distb": ["dis.disassemble", "<builtin>.RuntimeError"], "dis._disassemble_str": ["dis._try_compile", "dis._disassemble_recursive"], "dis._disassemble_recursive": ["dis.disassemble", "dis._disassemble_recursive", "<builtin>.hasattr", "<builtin>.print"], "dis._disassemble_bytes": ["<builtin>.print", "<builtin>.max", "<builtin>.str", "dis.Instruction._disassemble", "dis._get_instructions_bytes", "<builtin>.len"], "inspect.getblock": ["inspect.BlockFinder.__init__", "<builtin>.iter", "inspect.BlockFinder.tokeneater"], "_frozen_importlib._resolve_name": ["<builtin>.ValueError", "<builtin>.len"], "_frozen_importlib._sanity_check": ["<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.type", "<builtin>.ValueError", "<builtin>.ImportError"], "_frozen_importlib._find_and_load": ["_frozen_importlib._find_and_load_unlocked", "_frozen_importlib._lock_unlock_module", "_frozen_importlib._ModuleLockManager.__init__", "<builtin>.ModuleNotFoundError"], "_bootstrap._builtin_from_name": [], "_bootstrap._imp.extension_suffixes": [], "_frozen_importlib._builtin_from_name": ["_frozen_importlib.BuiltinImporter.find_spec", "_frozen_importlib._load_unlocked", "<builtin>.ImportError"], "_frozen_importlib_external._make_relax_case": [], "sys.modules.items": [], "_imp.is_frozen": [], "_frozen_importlib._init_module_attrs": ["<builtin>.getattr"], "_frozen_importlib._spec_from_module": ["<builtin>.list", "_frozen_importlib.ModuleSpec.__init__"], "importlib._bootstrap_external.SourceLoader": [], "importlib._bootstrap_external.FileFinder": [], "importlib._bootstrap_external.SourcelessFileLoader": [], "importlib._bootstrap_external.ExtensionFileLoader": ["importlib._bootstrap_external._check_name"], "importlib._bootstrap_external.PathFinder": [], "importlib._bootstrap_external._NamespaceLoader": [], "importlib._bootstrap_external.SourceFileLoader": [], "importlib._bootstrap_external.FileLoader": ["importlib._bootstrap_external._check_name"], "importlib._bootstrap_external._LoaderBasics": [], "importlib._bootstrap_external._NamespacePath": [], "importlib._bootstrap_external.WindowsRegistryFinder": [], "sys.path.partition": [], "posixpath.islink": ["stat.S_ISLNK"], "sys.base_prefix.partition": [], "ntpath._readlink_deep": ["<builtin>.set", "ntpath.islink", "ntpath.join", "ntpath.dirname", "nt.readlink", "ntpath.normcase", "ntpath.isabs", "ntpath.normpath"], "inspect._signature_from_callable.<lambda1>": ["<builtin>.hasattr"], "traceback.StackSummary.extract": ["<builtin>.set", "linecache.lazycache", "itertools.islice", "traceback.FrameSummary.__init__", "collections.deque", "linecache.checkcache", "<builtin>.getattr"], "traceback.TracebackException._load_lines": ["traceback.TracebackException._load_lines"], "traceback.walk_tb": [], "traceback._some_str": ["<builtin>.type", "<builtin>.str"], "traceback._format_final_exc_line": ["traceback._some_str"], "re.sub": ["re._compile"], "doctest.DocTestCase.__init__": ["unittest.case.TestCase.__init__"], "traceback.TracebackException.format": ["traceback.TracebackException.format", "traceback.TracebackException.format_exception_only"], "gettext.NullTranslations.ngettext": [], "threading.Condition._is_owned": [], "doctest.Example.__init__": [], "doctest.DocTestParser._min_indent": ["<builtin>.min", "<builtin>.len"], "doctest.DocTestParser._parse_example": ["doctest.DocTestParser._find_options", "doctest.DocTestParser._check_prompt_blank", "re.match", "doctest.DocTestParser._check_prefix", "<builtin>.len"], "tokenize.detect_encoding.find_cookie": ["<builtin>.SyntaxError", "tokenize._get_normal_name"], "tokenize.detect_encoding.read_or_stop": ["lzma.LZMAFile.readline", "gzip.GzipFile.readline", "bz2.BZ2File.readline"], "pprint._recursion": ["<builtin>.type", "<builtin>.id"], "<builtin>.bool": [], "pprint.PrettyPrinter._format": ["pprint._recursion", "sys.stdout.write", "pprint.PrettyPrinter._repr", "<builtin>.isinstance", "<builtin>.type", "<builtin>.id", "pprint.PrettyPrinter._pprint_dict", "<builtin>.len"], "logging.NullHandler.createLock": [], "logging.Handler.createLock": ["threading.RLock", "logging._register_at_fork_reinit_lock"], "logging._checkLevel": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.str"], "logging._addHandlerRef": ["logging._acquireLock", "weakref.ref", "logging._releaseLock"], "logging.Filterer.__init__": [], "asyncio.proactor_events._ProactorBasePipeTransport": [], "asyncio.proactor_events._ProactorDuplexPipeTransport": [], "asyncio.proactor_events.BaseProactorEventLoop": [], "asyncio.proactor_events._ProactorWritePipeTransport": [], "asyncio.proactor_events._ProactorDatagramTransport": [], "asyncio.proactor_events._ProactorBaseWritePipeTransport": [], "asyncio.proactor_events._ProactorReadPipeTransport": [], "asyncio.proactor_events._ProactorSocketTransport": [], "_socket": [], "socket._GiveupOnSendfile": [], "socket.socket": ["<builtin>.hasattr"], "selectors": ["selectors.BaseSelector", "collections.namedtuple", "math", "selectors._SelectorMapping", "collections.abc", "<builtin>.globals", "selectors.DevpollSelector", "<builtin>.hasattr", "select", "selectors.SelectSelector", "collections", "selectors.KqueueSelector", "selectors._PollLikeSelector", "abc", "selectors.EpollSelector", "selectors._BaseSelectorImpl", "selectors.PollSelector"], "socket.SocketIO": [], "sys.platform.lower": [], "asyncio.windows_utils.PipeHandle": [], "tempfile": ["tempfile.SpooledTemporaryFile", "functools", "tempfile._TemporaryFileCloser", "os", "tempfile._TemporaryFileWrapper", "<builtin>.hasattr", "tempfile._RandomNameSequence", "_thread.allocate_lock", "tempfile.TemporaryDirectory", "weakref", "io", "shutil", "random", "warnings"], "asyncio.windows_utils.Popen": [], "subprocess": ["threading", "subprocess.STARTUPINFO", "signal", "subprocess.TimeoutExpired", "subprocess.Handle", "<builtin>.hasattr", "contextlib", "selectors", "subprocess.CalledProcessError", "subprocess.CompletedProcess", "subprocess._use_posix_spawn", "os", "_posixsubprocess", "subprocess.Popen", "select", "io", "warnings", "subprocess.SubprocessError", "<builtin>.getattr"], "_struct": [], "dis.disassemble": ["<builtin>.dict", "dis.findlinestarts", "dis._disassemble_bytes"], "dis._try_compile": ["<builtin>.compile"], "dis.Instruction._disassemble": ["<builtin>.repr"], "dis._get_instructions_bytes": ["dis._unpack_opargs", "<builtin>.enumerate", "dis._get_const_info", "<builtin>.repr", "<builtin>.bool", "dis._get_name_info", "dis.findlabels"], "inspect.BlockFinder.__init__": [], "inspect.BlockFinder.tokeneater": [], "_frozen_importlib._find_and_load_unlocked": ["<builtin>.setattr", "_frozen_importlib._find_spec", "_frozen_importlib._load_unlocked", "<builtin>.ModuleNotFoundError", "_frozen_importlib._call_with_frames_removed"], "_frozen_importlib._lock_unlock_module": ["_frozen_importlib._ModuleLock.release", "_frozen_importlib._DummyModuleLock.release", "_frozen_importlib._ModuleLock.acquire", "_frozen_importlib._get_module_lock", "_frozen_importlib._DummyModuleLock.acquire"], "_frozen_importlib._ModuleLockManager.__init__": [], "<builtin>.ModuleNotFoundError": [], "_frozen_importlib.BuiltinImporter.find_spec": ["_frozen_importlib.spec_from_loader"], "_frozen_importlib._load_unlocked": ["_frozen_importlib.FrozenImporter.exec_module", "_frozen_importlib._load_backward_compatible", "<builtin>.hasattr", "_frozen_importlib.module_from_spec", "_frozen_importlib._verbose_message", "_frozen_importlib.BuiltinImporter.exec_module", "<builtin>.ImportError"], "_frozen_importlib.ModuleSpec.__init__": [], "importlib._bootstrap_external._check_name": ["importlib._bootstrap_external._check_name._wrap"], "stat.S_ISLNK": ["stat.S_IFMT"], "ntpath.islink": ["stat.S_ISLNK"], "ntpath.dirname": ["ntpath.split"], "nt.readlink": [], "traceback.FrameSummary.__init__": ["<builtin>.repr"], "collections.deque": [], "unittest.case.TestCase.__init__": ["unittest.case.TestCase.addTypeEqualityFunc", "<builtin>.ValueError", "<builtin>.getattr"], "doctest.DocTestParser._find_options": ["<builtin>.ValueError"], "doctest.DocTestParser._check_prompt_blank": ["<builtin>.enumerate", "<builtin>.ValueError", "<builtin>.len"], "doctest.DocTestParser._check_prefix": ["<builtin>.enumerate", "<builtin>.ValueError"], "<builtin>.SyntaxError": [], "tokenize._get_normal_name": [], "lzma.LZMAFile.readline": ["_compression.BaseStream._check_can_read"], "gzip.GzipFile.readline": ["_compression.BaseStream._check_not_closed"], "bz2.BZ2File.readline": ["_io._BufferedIOBase.__index__", "<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.hasattr", "_compression.BaseStream._check_can_read"], "pprint.PrettyPrinter._repr": ["pprint.PrettyPrinter.format"], "pprint.PrettyPrinter._pprint_dict": ["sys.stdout.write", "pprint.PrettyPrinter._format_dict_items", "<builtin>.sorted", "<builtin>.len"], "logging._register_at_fork_reinit_lock": ["logging._acquireLock", "_weakrefset.WeakSet.add", "logging._releaseLock"], "logging._acquireLock": [], "weakref.ref": [], "logging._releaseLock": [], "selectors.BaseSelector": ["abc.abstractmethod"], "selectors._SelectorMapping": [], "selectors.DevpollSelector": [], "select": [], "selectors.SelectSelector": [], "selectors.KqueueSelector": [], "selectors._PollLikeSelector": [], "selectors.EpollSelector": [], "selectors._BaseSelectorImpl": [], "selectors.PollSelector": [], "tempfile.SpooledTemporaryFile": [], "tempfile._TemporaryFileCloser": [], "tempfile._TemporaryFileWrapper": [], "tempfile._RandomNameSequence": [], "tempfile.TemporaryDirectory": [], "random": ["math", "random._test", "collections.abc", "random.SystemRandom", "bisect", "hashlib", "warnings", "random.Random", "<builtin>.hasattr", "_random", "random.Random.__init__", "_sha512", "os"], "subprocess.STARTUPINFO": [], "subprocess.TimeoutExpired": [], "subprocess.Handle": [], "subprocess.CalledProcessError": [], "subprocess.CompletedProcess": [], "subprocess._use_posix_spawn": ["<builtin>.map", "<builtin>.tuple", "<builtin>.hasattr", "<builtin>.len"], "_posixsubprocess": [], "subprocess.Popen": [], "subprocess.SubprocessError": [], "dis.findlinestarts": ["<builtin>.zip", "<builtin>.len"], "dis._unpack_opargs": ["<builtin>.range", "<builtin>.len"], "dis._get_const_info": ["<builtin>.repr"], "dis._get_name_info": ["<builtin>.repr"], "dis.findlabels": ["dis._unpack_opargs"], "_frozen_importlib._find_spec": ["_frozen_importlib._find_spec_legacy", "<builtin>.ImportError"], "_frozen_importlib._call_with_frames_removed": ["_frozen_importlib._gcd_import"], "_frozen_importlib._ModuleLock.release": ["<builtin>.RuntimeError"], "_frozen_importlib._DummyModuleLock.release": ["<builtin>.RuntimeError"], "_frozen_importlib._ModuleLock.acquire": ["_frozen_importlib._ModuleLock.has_deadlock"], "_frozen_importlib._get_module_lock": ["_frozen_importlib._DummyModuleLock.__init__", "_frozen_importlib._ModuleLock.__init__"], "_frozen_importlib._DummyModuleLock.acquire": [], "_frozen_importlib.spec_from_loader": ["_frozen_importlib.BuiltinImporter.is_package", "_frozen_importlib.ModuleSpec.__init__", "<builtin>.hasattr", "_frozen_importlib.FrozenImporter.is_package"], "_frozen_importlib.FrozenImporter.exec_module": ["_frozen_importlib._call_with_frames_removed", "<builtin>.exec", "<builtin>.ImportError"], "_frozen_importlib._load_backward_compatible": ["_frozen_importlib.FrozenImporter.load_module", "<builtin>.hasattr", "<builtin>.getattr"], "_frozen_importlib.module_from_spec": ["_frozen_importlib.FrozenImporter.create_module", "_frozen_importlib.BuiltinImporter.create_module", "<builtin>.hasattr", "_frozen_importlib._new_module", "_frozen_importlib._init_module_attrs", "<builtin>.ImportError"], "_frozen_importlib._verbose_message": ["<builtin>.print"], "_frozen_importlib.BuiltinImporter.exec_module": ["_frozen_importlib._call_with_frames_removed"], "importlib._bootstrap_external._check_name._wrap": ["<builtin>.setattr", "<builtin>.hasattr", "<builtin>.getattr"], "stat.S_IFMT": [], "unittest.case.TestCase.addTypeEqualityFunc": [], "_compression.BaseStream._check_can_read": ["io.UnsupportedOperation", "lzma.LZMAFile.readable", "gzip.GzipFile.readable", "bz2.BZ2File.readable"], "_compression.BaseStream._check_not_closed": ["<builtin>.ValueError"], "_io._BufferedIOBase.__index__": [], "pprint.PrettyPrinter.format": ["pprint._safe_repr"], "pprint.PrettyPrinter._format_dict_items": ["sys.stdout.write", "<builtin>.len", "<builtin>.enumerate", "pprint.PrettyPrinter._format", "pprint.PrettyPrinter._repr"], "random._test": ["random._test_generator"], "random.SystemRandom": [], "bisect": ["_bisect"], "hashlib": ["logging.exception", "<builtin>.set", "hashlib.__get_builtin_constructor", "hashlib.__get_openssl_constructor", "logging", "<builtin>.globals", "<builtin>.range", "<builtin>.bytes", "_hashlib"], "random.Random": [], "_random": [], "random.Random.__init__": ["random.Random.seed"], "_sha512": [], "_frozen_importlib._find_spec_legacy": ["_frozen_importlib.spec_from_loader"], "_frozen_importlib._ModuleLock.has_deadlock": [], "_frozen_importlib._DummyModuleLock.__init__": [], "_frozen_importlib._ModuleLock.__init__": [], "_frozen_importlib.BuiltinImporter.is_package": [], "_frozen_importlib.FrozenImporter.is_package": [], "_frozen_importlib.FrozenImporter.load_module": ["_frozen_importlib._load_module_shim"], "_frozen_importlib.FrozenImporter.create_module": [], "_frozen_importlib.BuiltinImporter.create_module": ["_frozen_importlib._call_with_frames_removed", "<builtin>.ImportError"], "_frozen_importlib._new_module": ["<builtin>.type"], "io.UnsupportedOperation": [], "lzma.LZMAFile.readable": ["_compression.BaseStream._check_not_closed"], "gzip.GzipFile.readable": [], "bz2.BZ2File.readable": ["_compression.BaseStream._check_not_closed"], "random._test_generator": ["random.Random.betavariate", "random.Random.triangular", "random.Random.gauss", "random.Random.gammavariate", "<builtin>.print", "<builtin>.min", "<builtin>.max", "random.Random.lognormvariate", "<builtin>.round", "random.Random.vonmisesvariate", "random.Random.normalvariate", "<builtin>.range", "time.perf_counter"], "_bisect": [], "logging.exception": ["logging.error"], "hashlib.__get_builtin_constructor": ["_sha256", "_sha3", "_blake2", "_sha1", "<builtin>.ValueError", "_md5", "_sha512"], "hashlib.__get_openssl_constructor": ["hashlib.__get_builtin_constructor", "<builtin>.getattr"], "_hashlib": [], "random.Random.seed": ["<builtin>.isinstance", "<builtin>.map", "<builtin>.ord", "<builtin>.super", "<builtin>.len"], "_frozen_importlib._load_module_shim": ["_frozen_importlib._load", "_frozen_importlib.spec_from_loader", "_frozen_importlib._exec"], "random.Random.betavariate": ["random.Random.gammavariate"], "random.Random.triangular": [], "random.Random.gauss": [], "random.Random.gammavariate": ["<builtin>.ValueError"], "random.Random.lognormvariate": ["random.Random.normalvariate"], "<builtin>.round": [], "random.Random.vonmisesvariate": [], "random.Random.normalvariate": [], "logging.error": ["logging.basicConfig", "logging.Logger.error", "<builtin>.len"], "_sha256": [], "_sha3": [], "_blake2": [], "_sha1": [], "_md5": [], "_frozen_importlib._load": ["_frozen_importlib._ModuleLockManager.__init__", "_frozen_importlib._load_unlocked"], "_frozen_importlib._exec": ["_frozen_importlib.FrozenImporter.exec_module", "_frozen_importlib.FrozenImporter.load_module", "<builtin>.hasattr", "_frozen_importlib.BuiltinImporter.exec_module", "_frozen_importlib._init_module_attrs", "_frozen_importlib._ModuleLockManager.__init__", "<builtin>.ImportError"], "logging.basicConfig": ["logging.Handler.setFormatter", "logging.FileHandler.__init__", "logging.FileHandler.close", "logging.StreamHandler.__init__", "logging.Handler.close", "logging.Formatter.__init__", "logging.Logger.removeHandler", "logging.Logger.setLevel", "logging._releaseLock", "<builtin>.ValueError", "logging._acquireLock", "logging.Logger.addHandler", "<builtin>.len"], "logging.Logger.error": ["logging.Logger._log", "logging.Logger.isEnabledFor"], "logging.Handler.setFormatter": [], "logging.FileHandler.__init__": ["logging.FileHandler._open", "logging.StreamHandler.__init__", "logging.Handler.__init__", "posixpath.abspath", "ntpath.abspath"], "logging.FileHandler.close": ["logging.FileHandler.close", "logging.StreamHandler.flush", "logging.Handler.close", "logging.Handler.release", "<builtin>.hasattr", "logging.Handler.acquire"], "logging.StreamHandler.__init__": ["logging.Handler.__init__"], "logging.Handler.close": ["logging._acquireLock", "logging._releaseLock"], "logging.Logger.removeHandler": ["logging._acquireLock", "logging._releaseLock"], "logging.Logger.setLevel": ["logging.Manager._clear_cache", "logging._checkLevel"], "logging.Logger.addHandler": ["logging._acquireLock", "logging._releaseLock"], "logging.Logger._log": ["logging.Logger.handle", "logging.Logger.findCaller", "<builtin>.isinstance", "<builtin>.type", "sys.exc_info", "logging.Logger.makeRecord"], "logging.Logger.isEnabledFor": ["logging.Logger.getEffectiveLevel", "logging._acquireLock", "logging._releaseLock"], "logging.FileHandler._open": ["<builtin>.open"], "logging.StreamHandler.flush": ["logging.StreamHandler.flush", "sys.stderr.flush", "logging.Handler.release", "<builtin>.hasattr", "logging.Handler.acquire"], "logging.Handler.release": [], "logging.Handler.acquire": [], "logging.Manager._clear_cache": ["logging._acquireLock", "<builtin>.isinstance", "logging._releaseLock"], "logging.Logger.handle": ["logging.Filterer.filter", "logging.Logger.callHandlers"], "logging.Logger.findCaller": ["posixpath.normcase", "traceback.print_stack", "<builtin>.hasattr", "logging.<lambda1>", "ntpath.normcase", "io.StringIO"], "logging.Logger.makeRecord": ["<builtin>.KeyError", "logging.LogRecord.__init__"], "logging.Logger.getEffectiveLevel": [], "sys.stderr.flush": [], "logging.Filterer.filter": ["<builtin>.hasattr"], "logging.Logger.callHandlers": ["logging.NullHandler.handle", "sys.stderr.write", "logging.Handler.handle"], "traceback.print_stack": ["traceback.extract_stack", "traceback.print_list", "sys._getframe"], "logging.<lambda1>": ["sys._getframe"], "io.StringIO": [], "logging.LogRecord.__init__": ["ntpath.splitext", "posixpath.basename", "<builtin>.isinstance", "<builtin>.int", "logging.getLevelName", "threading.current_thread", "<builtin>.hasattr", "sys.modules.get", "posixpath.splitext", "ntpath.basename", "time.time", "<builtin>.len"], "logging.NullHandler.handle": [], "logging.Handler.handle": ["logging.NullHandler.emit", "logging.Handler.release", "logging.Handler.emit", "logging.Filterer.filter", "logging.Handler.acquire", "logging.FileHandler.emit", "logging.StreamHandler.emit", "unittest.case._CapturingHandler.emit"], "traceback.extract_stack": ["sys._getframe", "traceback.StackSummary.extract", "traceback.walk_stack"], "traceback.print_list": ["<builtin>.print", "traceback.StackSummary.format", "traceback.StackSummary.from_list"], "logging.getLevelName": [], "logging.NullHandler.emit": [], "logging.Handler.emit": ["<builtin>.NotImplementedError"], "logging.FileHandler.emit": ["logging.StreamHandler.emit", "logging.FileHandler._open", "logging.FileHandler.emit"], "logging.StreamHandler.emit": ["logging.Handler.handleError", "logging.StreamHandler.flush", "sys.stderr.write", "logging.Handler.format"], "unittest.case._CapturingHandler.emit": ["logging.Handler.format"], "traceback.walk_stack": ["sys._getframe"], "traceback.StackSummary.format": ["<builtin>.sorted"], "traceback.StackSummary.from_list": ["traceback.FrameSummary.__init__", "<builtin>.isinstance"], "<builtin>.NotImplementedError": [], "logging.Handler.handleError": ["traceback.print_stack", "ntpath.dirname", "sys.stderr.write", "sys.exc_info", "traceback.print_exception", "posixpath.dirname"], "logging.Handler.format": ["logging.Formatter.format"], "posixpath.dirname": ["sys.base_prefix.rfind", "sys.path.rfind", "<builtin>.len", "posixpath._get_sep"], "logging.Formatter.format": ["logging.Formatter.formatException", "logging.Formatter.usesTime", "logging.Formatter.formatStack", "logging.Formatter.formatMessage", "logging.Formatter.formatTime"], "logging.Formatter.formatException": ["traceback.print_exception", "io.StringIO"], "logging.Formatter.usesTime": [], "logging.Formatter.formatStack": [], "logging.Formatter.formatMessage": [], "logging.Formatter.formatTime": ["time.localtime", "time.strftime"], "time.localtime": [], "time.strftime": []}